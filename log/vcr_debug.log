[Cassette: 'aws_inspector_v2_findings'] Initialized with options: {:record=>:once, :record_on_error=>true, :match_requests_on=>[:method, :uri], :allow_unused_http_interactions=>true, :serialize_with=>:yaml, :persist_with=>:file_system, :persister_options=>{}}
[webmock] Handling request: [get http://169.254.169.254/latest/metadata/] (disabled: false)
[webmock] Identified request type (externally_stubbed) for [get http://169.254.169.254/latest/metadata/]
[webmock] Handling request: [get http://169.254.169.254/latest/metadata/] (disabled: false)
[webmock] Identified request type (externally_stubbed) for [get http://169.254.169.254/latest/metadata/]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
  [Cassette: 'aws_inspector_v2_findings'] Initialized HTTPInteractionList with request matchers [:method, :uri] and 28 interaction(s): { [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" In the Linux kernel,"], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" The _asn1_check_iden"], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" LibTIFF 4.0.7 allows"], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\"\\n It was discovered "], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" Null source pointer "], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" In shadow before 4.5"], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" In elfutils 0.183, a"], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\"A use-after-free vuln"], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" During key agreement"], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" In the Linux kernel,"], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" An issue was discove"], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\"\\n It was discovered "], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" A heap buffer overfl"], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" GNU Binutils before "], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" Use of Out-of-range "], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" The OpenSSL DSA sign"], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" An issue was discove"], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" Out-of-bounds Read i"], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" less through 653 all"], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" The recv_files funct"], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" NULL Pointer Derefer"], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" If an application en"], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\"Microsoft ODBC Driver"], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" Heap-based Buffer Ov"], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" libvterm through 0+b"], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" LibTIFF 4.0.7 has an"], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" In append_to_verify_"], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" Out-of-bounds Write "] }
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" In the Linux kernel,"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" The _asn1_check_iden"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" LibTIFF 4.0.7 allows"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\"\\n It was discovered "]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" Null source pointer "]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" In shadow before 4.5"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" In elfutils 0.183, a"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\"A use-after-free vuln"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" During key agreement"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" In the Linux kernel,"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" An issue was discove"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\"\\n It was discovered "]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" A heap buffer overfl"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" GNU Binutils before "]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" Use of Out-of-range "]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" The OpenSSL DSA sign"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" An issue was discove"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" Out-of-bounds Read i"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" less through 653 all"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" The recv_files funct"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" NULL Pointer Derefer"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" If an application en"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\"Microsoft ODBC Driver"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" Heap-based Buffer Ov"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" libvterm through 0+b"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" LibTIFF 4.0.7 has an"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" In append_to_verify_"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" Out-of-bounds Write "]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[Cassette: 'aws_inspector_v2_findings'] Initialized with options: {:record=>:once, :record_on_error=>true, :match_requests_on=>[:method, :uri], :allow_unused_http_interactions=>true, :serialize_with=>:yaml, :persist_with=>:file_system, :persister_options=>{}}
[webmock] Handling request: [get http://169.254.169.254/latest/metadata/] (disabled: false)
[webmock] Identified request type (externally_stubbed) for [get http://169.254.169.254/latest/metadata/]
[webmock] Handling request: [get http://169.254.169.254/latest/metadata/] (disabled: false)
[webmock] Identified request type (externally_stubbed) for [get http://169.254.169.254/latest/metadata/]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
  [Cassette: 'aws_inspector_v2_findings'] Initialized HTTPInteractionList with request matchers [:method, :uri] and 28 interaction(s): { [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" In the Linux kernel,"], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" The _asn1_check_iden"], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" LibTIFF 4.0.7 allows"], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\"\\n It was discovered "], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" Null source pointer "], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" In shadow before 4.5"], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" In elfutils 0.183, a"], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\"A use-after-free vuln"], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" During key agreement"], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" In the Linux kernel,"], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" An issue was discove"], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\"\\n It was discovered "], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" A heap buffer overfl"], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" GNU Binutils before "], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" Use of Out-of-range "], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" The OpenSSL DSA sign"], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" An issue was discove"], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" Out-of-bounds Read i"], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" less through 653 all"], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" The recv_files funct"], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" NULL Pointer Derefer"], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" If an application en"], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\"Microsoft ODBC Driver"], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" Heap-based Buffer Ov"], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" libvterm through 0+b"], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" LibTIFF 4.0.7 has an"], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" In append_to_verify_"], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" Out-of-bounds Write "] }
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" In the Linux kernel,"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" The _asn1_check_iden"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" LibTIFF 4.0.7 allows"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\"\\n It was discovered "]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" Null source pointer "]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" In shadow before 4.5"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" In elfutils 0.183, a"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\"A use-after-free vuln"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" During key agreement"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" In the Linux kernel,"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" An issue was discove"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\"\\n It was discovered "]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" A heap buffer overfl"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" GNU Binutils before "]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" Use of Out-of-range "]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" The OpenSSL DSA sign"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" An issue was discove"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" Out-of-bounds Read i"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" less through 653 all"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" The recv_files funct"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" NULL Pointer Derefer"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" If an application en"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\"Microsoft ODBC Driver"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" Heap-based Buffer Ov"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" libvterm through 0+b"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" LibTIFF 4.0.7 has an"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" In append_to_verify_"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" Out-of-bounds Write "]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[Cassette: 'aws_inspector_v2_findings'] Initialized with options: {:record=>:once, :record_on_error=>true, :match_requests_on=>[:method, :uri], :allow_unused_http_interactions=>true, :serialize_with=>:yaml, :persist_with=>:file_system, :persister_options=>{}}
[webmock] Handling request: [get http://169.254.169.254/latest/metadata/] (disabled: false)
[webmock] Identified request type (externally_stubbed) for [get http://169.254.169.254/latest/metadata/]
[webmock] Handling request: [get http://169.254.169.254/latest/metadata/] (disabled: false)
[webmock] Identified request type (externally_stubbed) for [get http://169.254.169.254/latest/metadata/]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
  [Cassette: 'aws_inspector_v2_findings'] Initialized HTTPInteractionList with request matchers [:method, :uri] and 28 interaction(s): { [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" In the Linux kernel,"], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" The _asn1_check_iden"], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" LibTIFF 4.0.7 allows"], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\"\\n It was discovered "], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" Null source pointer "], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" In shadow before 4.5"], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" In elfutils 0.183, a"], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\"A use-after-free vuln"], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" During key agreement"], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" In the Linux kernel,"], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" An issue was discove"], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\"\\n It was discovered "], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" A heap buffer overfl"], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" GNU Binutils before "], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" Use of Out-of-range "], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" The OpenSSL DSA sign"], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" An issue was discove"], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" Out-of-bounds Read i"], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" less through 653 all"], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" The recv_files funct"], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" NULL Pointer Derefer"], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" If an application en"], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\"Microsoft ODBC Driver"], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" Heap-based Buffer Ov"], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" libvterm through 0+b"], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" LibTIFF 4.0.7 has an"], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" In append_to_verify_"], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" Out-of-bounds Write "] }
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" In the Linux kernel,"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" The _asn1_check_iden"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" LibTIFF 4.0.7 allows"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\"\\n It was discovered "]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" Null source pointer "]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" In shadow before 4.5"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" In elfutils 0.183, a"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\"A use-after-free vuln"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" During key agreement"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" In the Linux kernel,"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" An issue was discove"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\"\\n It was discovered "]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" A heap buffer overfl"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" GNU Binutils before "]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" Use of Out-of-range "]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" The OpenSSL DSA sign"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" An issue was discove"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" Out-of-bounds Read i"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" less through 653 all"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" The recv_files funct"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" NULL Pointer Derefer"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" If an application en"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\"Microsoft ODBC Driver"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" Heap-based Buffer Ov"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" libvterm through 0+b"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" LibTIFF 4.0.7 has an"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" In append_to_verify_"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" Out-of-bounds Write "]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[Cassette: 'aws_inspector_v2_findings'] Initialized with options: {:record=>:once, :record_on_error=>true, :match_requests_on=>[:method, :uri], :allow_unused_http_interactions=>true, :serialize_with=>:yaml, :persist_with=>:file_system, :persister_options=>{}}
[webmock] Handling request: [get http://169.254.169.254/latest/metadata/] (disabled: false)
[webmock] Identified request type (externally_stubbed) for [get http://169.254.169.254/latest/metadata/]
[webmock] Handling request: [get http://169.254.169.254/latest/metadata/] (disabled: false)
[webmock] Identified request type (externally_stubbed) for [get http://169.254.169.254/latest/metadata/]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
  [Cassette: 'aws_inspector_v2_findings'] Initialized HTTPInteractionList with request matchers [:method, :uri] and 28 interaction(s): { [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" In the Linux kernel,"], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" The _asn1_check_iden"], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" LibTIFF 4.0.7 allows"], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\"\\n It was discovered "], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" Null source pointer "], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" In shadow before 4.5"], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" In elfutils 0.183, a"], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\"A use-after-free vuln"], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" During key agreement"], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" In the Linux kernel,"], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" An issue was discove"], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\"\\n It was discovered "], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" A heap buffer overfl"], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" GNU Binutils before "], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" Use of Out-of-range "], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" The OpenSSL DSA sign"], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" An issue was discove"], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" Out-of-bounds Read i"], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" less through 653 all"], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" The recv_files funct"], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" NULL Pointer Derefer"], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" If an application en"], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\"Microsoft ODBC Driver"], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" Heap-based Buffer Ov"], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" libvterm through 0+b"], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" LibTIFF 4.0.7 has an"], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" In append_to_verify_"], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" Out-of-bounds Write "] }
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" In the Linux kernel,"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" The _asn1_check_iden"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" LibTIFF 4.0.7 allows"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\"\\n It was discovered "]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" Null source pointer "]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" In shadow before 4.5"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" In elfutils 0.183, a"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\"A use-after-free vuln"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" During key agreement"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" In the Linux kernel,"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" An issue was discove"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\"\\n It was discovered "]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" A heap buffer overfl"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" GNU Binutils before "]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" Use of Out-of-range "]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" The OpenSSL DSA sign"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" An issue was discove"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" Out-of-bounds Read i"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" less through 653 all"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" The recv_files funct"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" NULL Pointer Derefer"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" If an application en"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\"Microsoft ODBC Driver"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" Heap-based Buffer Ov"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" libvterm through 0+b"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" LibTIFF 4.0.7 has an"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" In append_to_verify_"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" Out-of-bounds Write "]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[Cassette: 'aws_inspector_v2_findings'] Initialized with options: {:record=>:once, :record_on_error=>true, :match_requests_on=>[:method, :uri], :allow_unused_http_interactions=>true, :serialize_with=>:yaml, :persist_with=>:file_system, :persister_options=>{}}
[webmock] Handling request: [get http://169.254.169.254/latest/metadata/] (disabled: false)
[webmock] Identified request type (externally_stubbed) for [get http://169.254.169.254/latest/metadata/]
[webmock] Handling request: [get http://169.254.169.254/latest/metadata/] (disabled: false)
[webmock] Identified request type (externally_stubbed) for [get http://169.254.169.254/latest/metadata/]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
  [Cassette: 'aws_inspector_v2_findings'] Initialized HTTPInteractionList with request matchers [:method, :uri] and 28 interaction(s): { [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" In the Linux kernel,"], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" The _asn1_check_iden"], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" LibTIFF 4.0.7 allows"], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\"\\n It was discovered "], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" Null source pointer "], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" In shadow before 4.5"], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" In elfutils 0.183, a"], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\"A use-after-free vuln"], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" During key agreement"], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" In the Linux kernel,"], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" An issue was discove"], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\"\\n It was discovered "], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" A heap buffer overfl"], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" GNU Binutils before "], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" Use of Out-of-range "], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" The OpenSSL DSA sign"], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" An issue was discove"], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" Out-of-bounds Read i"], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" less through 653 all"], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" The recv_files funct"], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" NULL Pointer Derefer"], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" If an application en"], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\"Microsoft ODBC Driver"], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" Heap-based Buffer Ov"], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" libvterm through 0+b"], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" LibTIFF 4.0.7 has an"], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" In append_to_verify_"], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" Out-of-bounds Write "] }
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" In the Linux kernel,"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" The _asn1_check_iden"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" LibTIFF 4.0.7 allows"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\"\\n It was discovered "]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" Null source pointer "]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" In shadow before 4.5"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" In elfutils 0.183, a"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\"A use-after-free vuln"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" During key agreement"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" In the Linux kernel,"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" An issue was discove"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\"\\n It was discovered "]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" A heap buffer overfl"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" GNU Binutils before "]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" Use of Out-of-range "]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" The OpenSSL DSA sign"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" An issue was discove"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" Out-of-bounds Read i"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" less through 653 all"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" The recv_files funct"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" NULL Pointer Derefer"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" If an application en"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\"Microsoft ODBC Driver"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" Heap-based Buffer Ov"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" libvterm through 0+b"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" LibTIFF 4.0.7 has an"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" In append_to_verify_"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" Out-of-bounds Write "]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[Cassette: 'aws_inspector_v2_findings'] Initialized with options: {:record=>:once, :record_on_error=>true, :match_requests_on=>[:method, :uri], :allow_unused_http_interactions=>true, :serialize_with=>:yaml, :persist_with=>:file_system, :persister_options=>{}}
[webmock] Handling request: [get http://169.254.169.254/latest/metadata/] (disabled: false)
[webmock] Identified request type (externally_stubbed) for [get http://169.254.169.254/latest/metadata/]
[webmock] Handling request: [get http://169.254.169.254/latest/metadata/] (disabled: false)
[webmock] Identified request type (externally_stubbed) for [get http://169.254.169.254/latest/metadata/]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
  [Cassette: 'aws_inspector_v2_findings'] Initialized HTTPInteractionList with request matchers [:method, :uri] and 28 interaction(s): { [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" In the Linux kernel,"], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" The _asn1_check_iden"], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" LibTIFF 4.0.7 allows"], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\"\\n It was discovered "], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" Null source pointer "], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" In shadow before 4.5"], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" In elfutils 0.183, a"], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\"A use-after-free vuln"], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" During key agreement"], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" In the Linux kernel,"], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" An issue was discove"], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\"\\n It was discovered "], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" A heap buffer overfl"], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" GNU Binutils before "], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" Use of Out-of-range "], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" The OpenSSL DSA sign"], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" An issue was discove"], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" Out-of-bounds Read i"], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" less through 653 all"], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" The recv_files funct"], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" NULL Pointer Derefer"], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" If an application en"], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\"Microsoft ODBC Driver"], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" Heap-based Buffer Ov"], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" libvterm through 0+b"], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" LibTIFF 4.0.7 has an"], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" In append_to_verify_"], [post https://inspector2.us-east-1.amazonaws.com/findings/list] => [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" Out-of-bounds Write "] }
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" In the Linux kernel,"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" The _asn1_check_iden"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" LibTIFF 4.0.7 allows"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\"\\n It was discovered "]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" Null source pointer "]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" In shadow before 4.5"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" In elfutils 0.183, a"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\"A use-after-free vuln"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" During key agreement"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" In the Linux kernel,"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" An issue was discove"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\"\\n It was discovered "]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" A heap buffer overfl"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" GNU Binutils before "]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" Use of Out-of-range "]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" The OpenSSL DSA sign"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" An issue was discove"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" Out-of-bounds Read i"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" less through 653 all"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" The recv_files funct"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" NULL Pointer Derefer"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" If an application en"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\"Microsoft ODBC Driver"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" Heap-based Buffer Ov"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" libvterm through 0+b"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" LibTIFF 4.0.7 has an"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" In append_to_verify_"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [post https://inspector2.us-east-1.amazonaws.com/findings/list] (disabled: false)
  [Cassette: 'aws_inspector_v2_findings'] Checking if [post https://inspector2.us-east-1.amazonaws.com/findings/list] matches [post https://inspector2.us-east-1.amazonaws.com/findings/list] using [:method, :uri]
    [Cassette: 'aws_inspector_v2_findings'] method (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
    [Cassette: 'aws_inspector_v2_findings'] uri (matched): current request [post https://inspector2.us-east-1.amazonaws.com/findings/list] vs [post https://inspector2.us-east-1.amazonaws.com/findings/list]
  [Cassette: 'aws_inspector_v2_findings'] Found matching interaction for [post https://inspector2.us-east-1.amazonaws.com/findings/list] at index 0: [200 "{\"findings\":[{\"awsAccountId\":\"612899039241\",\"description\":\" Out-of-bounds Write "]
[webmock] Identified request type (stubbed_by_vcr) for [post https://inspector2.us-east-1.amazonaws.com/findings/list]
[webmock] Handling request: [get http://169.254.169.254/latest/metadata/] (disabled: false)
[webmock] Identified request type (externally_stubbed) for [get http://169.254.169.254/latest/metadata/]
[webmock] Handling request: [get http://169.254.169.254/latest/metadata/] (disabled: false)
[webmock] Identified request type (externally_stubbed) for [get http://169.254.169.254/latest/metadata/]
[webmock] Handling request: [put http://169.254.169.254/latest/api/token] (disabled: false)
[webmock] Identified request type (unhandled) for [put http://169.254.169.254/latest/api/token]
[webmock] Handling request: [put http://169.254.169.254/latest/api/token] (disabled: false)
[webmock] Identified request type (unhandled) for [put http://169.254.169.254/latest/api/token]
[webmock] Handling request: [put http://169.254.169.254/latest/api/token] (disabled: false)
[webmock] Identified request type (unhandled) for [put http://169.254.169.254/latest/api/token]
[webmock] Handling request: [put http://169.254.169.254/latest/api/token] (disabled: false)
[webmock] Identified request type (unhandled) for [put http://169.254.169.254/latest/api/token]
[webmock] Handling request: [put http://169.254.169.254/latest/api/token] (disabled: false)
[webmock] Identified request type (unhandled) for [put http://169.254.169.254/latest/api/token]
[webmock] Handling request: [put http://169.254.169.254/latest/api/token] (disabled: false)
[webmock] Identified request type (unhandled) for [put http://169.254.169.254/latest/api/token]
[webmock] Handling request: [put http://169.254.169.254/latest/api/token] (disabled: false)
[webmock] Identified request type (unhandled) for [put http://169.254.169.254/latest/api/token]
[webmock] Handling request: [put http://169.254.169.254/latest/api/token] (disabled: false)
[webmock] Identified request type (unhandled) for [put http://169.254.169.254/latest/api/token]
[webmock] Handling request: [put http://169.254.169.254/latest/api/token] (disabled: false)
[webmock] Identified request type (unhandled) for [put http://169.254.169.254/latest/api/token]
[webmock] Handling request: [put http://169.254.169.254/latest/api/token] (disabled: false)
[webmock] Identified request type (unhandled) for [put http://169.254.169.254/latest/api/token]
[webmock] Handling request: [put http://169.254.169.254/latest/api/token] (disabled: false)
[webmock] Identified request type (unhandled) for [put http://169.254.169.254/latest/api/token]
[webmock] Handling request: [put http://169.254.169.254/latest/api/token] (disabled: false)
[webmock] Identified request type (unhandled) for [put http://169.254.169.254/latest/api/token]
[Cassette: 'aws_sts'] Initialized with options: {:record=>:once, :record_on_error=>true, :match_requests_on=>[:method, :uri], :allow_unused_http_interactions=>true, :serialize_with=>:yaml, :persist_with=>:file_system, :persister_options=>{}}
[webmock] Handling request: [get http://169.254.169.254/latest/metadata/] (disabled: false)
[webmock] Identified request type (externally_stubbed) for [get http://169.254.169.254/latest/metadata/]
[Cassette: 'aws_sts'] Initialized with options: {:record=>:once, :record_on_error=>true, :match_requests_on=>[:method, :uri], :allow_unused_http_interactions=>true, :serialize_with=>:yaml, :persist_with=>:file_system, :persister_options=>{}}
[webmock] Handling request: [get http://169.254.169.254/latest/metadata/] (disabled: false)
[webmock] Identified request type (externally_stubbed) for [get http://169.254.169.254/latest/metadata/]
[webmock] Handling request: [post https://sts.us-east-1.amazonaws.com/] (disabled: false)
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
  [Cassette: 'aws_sts'] Initialized HTTPInteractionList with request matchers [:method, :uri] and 1 interaction(s): { [post https://sts.us-east-1.amazonaws.com/] => [200 "<AssumeRoleResponse xmlns=\"https://sts.amazonaws.com/doc/2011-06-15/\">\n  <Assume"] }
  [Cassette: 'aws_sts'] Checking if [post https://sts.us-east-1.amazonaws.com/] matches [post https://sts.us-east-1.amazonaws.com/] using [:method, :uri]
    [Cassette: 'aws_sts'] method (matched): current request [post https://sts.us-east-1.amazonaws.com/] vs [post https://sts.us-east-1.amazonaws.com/]
    [Cassette: 'aws_sts'] uri (matched): current request [post https://sts.us-east-1.amazonaws.com/] vs [post https://sts.us-east-1.amazonaws.com/]
  [Cassette: 'aws_sts'] Found matching interaction for [post https://sts.us-east-1.amazonaws.com/] at index 0: [200 "<AssumeRoleResponse xmlns=\"https://sts.amazonaws.com/doc/2011-06-15/\">\n  <Assume"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://sts.us-east-1.amazonaws.com/]
[Cassette: 'cylera'] Initialized with options: {:record=>:once, :record_on_error=>true, :match_requests_on=>[:method, :uri], :allow_unused_http_interactions=>true, :serialize_with=>:yaml, :persist_with=>:file_system, :persister_options=>{}}
[webmock] Handling request: [get http://169.254.169.254/latest/metadata/] (disabled: false)
[webmock] Identified request type (externally_stubbed) for [get http://169.254.169.254/latest/metadata/]
[webmock] Handling request: [get http://169.254.169.254/latest/metadata/] (disabled: false)
[webmock] Identified request type (externally_stubbed) for [get http://169.254.169.254/latest/metadata/]
[webmock] Handling request: [post https://cylera.host/auth/login_user] (disabled: false)
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
  [Cassette: 'cylera'] Initialized HTTPInteractionList with request matchers [:method, :uri] and 4 interaction(s): { [post https://cylera.host/auth/login_user] => [200 "{ \"token\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzY29wZSI6InVzZXIiLCJpZCI6MTY"], [get https://cylera.host/inventory/devices?page=0&page_size=100] => [200 "{ \"devices\": [ { \"aetitle\": \"NBXXCU\", \"class\": \"Infrastructure\", \"fda_class\": \"2"], [get https://cylera.host/risk/vulnerabilities?page=0&page_size=100] => [200 "{ \"vulnerabilities\": [ { \"ip_address\": \"192.168.1.40\", \"mac_address\": \"00:15:bd:"], [get https://cylera.host/risk/mitigations?vulnerability=CVE-2000-0761] => [200 "{ \"description\": \"OS2/Warp 4.5 FTP server allows remote attackers to cause a den"] }
  [Cassette: 'cylera'] Checking if [post https://cylera.host/auth/login_user] matches [post https://cylera.host/auth/login_user] using [:method, :uri]
    [Cassette: 'cylera'] method (matched): current request [post https://cylera.host/auth/login_user] vs [post https://cylera.host/auth/login_user]
    [Cassette: 'cylera'] uri (matched): current request [post https://cylera.host/auth/login_user] vs [post https://cylera.host/auth/login_user]
  [Cassette: 'cylera'] Found matching interaction for [post https://cylera.host/auth/login_user] at index 0: [200 "{ \"token\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzY29wZSI6InVzZXIiLCJpZCI6MTY"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://cylera.host/auth/login_user]
[webmock] Handling request: [get https://cylera.host/risk/vulnerabilities?page=0&page_size=100] (disabled: false)
  [Cassette: 'cylera'] Checking if [get https://cylera.host/risk/vulnerabilities?page=0&page_size=100] matches [get https://cylera.host/inventory/devices?page=0&page_size=100] using [:method, :uri]
    [Cassette: 'cylera'] method (matched): current request [get https://cylera.host/risk/vulnerabilities?page=0&page_size=100] vs [get https://cylera.host/inventory/devices?page=0&page_size=100]
    [Cassette: 'cylera'] uri (did not match): current request [get https://cylera.host/risk/vulnerabilities?page=0&page_size=100] vs [get https://cylera.host/inventory/devices?page=0&page_size=100]
  [Cassette: 'cylera'] Checking if [get https://cylera.host/risk/vulnerabilities?page=0&page_size=100] matches [get https://cylera.host/risk/vulnerabilities?page=0&page_size=100] using [:method, :uri]
    [Cassette: 'cylera'] method (matched): current request [get https://cylera.host/risk/vulnerabilities?page=0&page_size=100] vs [get https://cylera.host/risk/vulnerabilities?page=0&page_size=100]
    [Cassette: 'cylera'] uri (matched): current request [get https://cylera.host/risk/vulnerabilities?page=0&page_size=100] vs [get https://cylera.host/risk/vulnerabilities?page=0&page_size=100]
  [Cassette: 'cylera'] Found matching interaction for [get https://cylera.host/risk/vulnerabilities?page=0&page_size=100] at index 1: [200 "{ \"vulnerabilities\": [ { \"ip_address\": \"192.168.1.40\", \"mac_address\": \"00:15:bd:"]
[webmock] Identified request type (stubbed_by_vcr) for [get https://cylera.host/risk/vulnerabilities?page=0&page_size=100]
[webmock] Handling request: [get https://cylera.host/inventory/devices?page=0&page_size=100] (disabled: false)
  [Cassette: 'cylera'] Checking if [get https://cylera.host/inventory/devices?page=0&page_size=100] matches [get https://cylera.host/inventory/devices?page=0&page_size=100] using [:method, :uri]
    [Cassette: 'cylera'] method (matched): current request [get https://cylera.host/inventory/devices?page=0&page_size=100] vs [get https://cylera.host/inventory/devices?page=0&page_size=100]
    [Cassette: 'cylera'] uri (matched): current request [get https://cylera.host/inventory/devices?page=0&page_size=100] vs [get https://cylera.host/inventory/devices?page=0&page_size=100]
  [Cassette: 'cylera'] Found matching interaction for [get https://cylera.host/inventory/devices?page=0&page_size=100] at index 0: [200 "{ \"devices\": [ { \"aetitle\": \"NBXXCU\", \"class\": \"Infrastructure\", \"fda_class\": \"2"]
[webmock] Identified request type (stubbed_by_vcr) for [get https://cylera.host/inventory/devices?page=0&page_size=100]
[webmock] Handling request: [get https://cylera.host/risk/mitigations?vulnerability=CVE-2000-0761] (disabled: false)
  [Cassette: 'cylera'] Checking if [get https://cylera.host/risk/mitigations?vulnerability=CVE-2000-0761] matches [get https://cylera.host/risk/mitigations?vulnerability=CVE-2000-0761] using [:method, :uri]
    [Cassette: 'cylera'] method (matched): current request [get https://cylera.host/risk/mitigations?vulnerability=CVE-2000-0761] vs [get https://cylera.host/risk/mitigations?vulnerability=CVE-2000-0761]
    [Cassette: 'cylera'] uri (matched): current request [get https://cylera.host/risk/mitigations?vulnerability=CVE-2000-0761] vs [get https://cylera.host/risk/mitigations?vulnerability=CVE-2000-0761]
  [Cassette: 'cylera'] Found matching interaction for [get https://cylera.host/risk/mitigations?vulnerability=CVE-2000-0761] at index 0: [200 "{ \"description\": \"OS2/Warp 4.5 FTP server allows remote attackers to cause a den"]
[webmock] Identified request type (stubbed_by_vcr) for [get https://cylera.host/risk/mitigations?vulnerability=CVE-2000-0761]
[webmock] Handling request: [get http://169.254.169.254/latest/metadata/] (disabled: false)
[webmock] Identified request type (externally_stubbed) for [get http://169.254.169.254/latest/metadata/]
[Cassette: 'cylera'] Initialized with options: {:record=>:once, :record_on_error=>true, :match_requests_on=>[:method, :uri], :allow_unused_http_interactions=>true, :serialize_with=>:yaml, :persist_with=>:file_system, :persister_options=>{}}
[webmock] Handling request: [get http://169.254.169.254/latest/metadata/] (disabled: false)
[webmock] Identified request type (externally_stubbed) for [get http://169.254.169.254/latest/metadata/]
[webmock] Handling request: [get http://169.254.169.254/latest/metadata/] (disabled: false)
[webmock] Identified request type (externally_stubbed) for [get http://169.254.169.254/latest/metadata/]
[webmock] Handling request: [post https://cylera.host/auth/login_user] (disabled: false)
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
  [Cassette: 'cylera'] Initialized HTTPInteractionList with request matchers [:method, :uri] and 4 interaction(s): { [post https://cylera.host/auth/login_user] => [200 "{ \"token\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzY29wZSI6InVzZXIiLCJpZCI6MTY"], [get https://cylera.host/inventory/devices?page=0&page_size=100] => [200 "{ \"devices\": [ { \"aetitle\": \"NBXXCU\", \"class\": \"Infrastructure\", \"fda_class\": \"2"], [get https://cylera.host/risk/vulnerabilities?page=0&page_size=100] => [200 "{ \"vulnerabilities\": [ { \"ip_address\": \"192.168.1.40\", \"mac_address\": \"00:15:bd:"], [get https://cylera.host/risk/mitigations?vulnerability=CVE-2000-0761] => [200 "{ \"description\": \"OS2/Warp 4.5 FTP server allows remote attackers to cause a den"] }
  [Cassette: 'cylera'] Checking if [post https://cylera.host/auth/login_user] matches [post https://cylera.host/auth/login_user] using [:method, :uri]
    [Cassette: 'cylera'] method (matched): current request [post https://cylera.host/auth/login_user] vs [post https://cylera.host/auth/login_user]
    [Cassette: 'cylera'] uri (matched): current request [post https://cylera.host/auth/login_user] vs [post https://cylera.host/auth/login_user]
  [Cassette: 'cylera'] Found matching interaction for [post https://cylera.host/auth/login_user] at index 0: [200 "{ \"token\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzY29wZSI6InVzZXIiLCJpZCI6MTY"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://cylera.host/auth/login_user]
[webmock] Handling request: [get https://cylera.host/risk/vulnerabilities?page=0&page_size=100] (disabled: false)
  [Cassette: 'cylera'] Checking if [get https://cylera.host/risk/vulnerabilities?page=0&page_size=100] matches [get https://cylera.host/inventory/devices?page=0&page_size=100] using [:method, :uri]
    [Cassette: 'cylera'] method (matched): current request [get https://cylera.host/risk/vulnerabilities?page=0&page_size=100] vs [get https://cylera.host/inventory/devices?page=0&page_size=100]
    [Cassette: 'cylera'] uri (did not match): current request [get https://cylera.host/risk/vulnerabilities?page=0&page_size=100] vs [get https://cylera.host/inventory/devices?page=0&page_size=100]
  [Cassette: 'cylera'] Checking if [get https://cylera.host/risk/vulnerabilities?page=0&page_size=100] matches [get https://cylera.host/risk/vulnerabilities?page=0&page_size=100] using [:method, :uri]
    [Cassette: 'cylera'] method (matched): current request [get https://cylera.host/risk/vulnerabilities?page=0&page_size=100] vs [get https://cylera.host/risk/vulnerabilities?page=0&page_size=100]
    [Cassette: 'cylera'] uri (matched): current request [get https://cylera.host/risk/vulnerabilities?page=0&page_size=100] vs [get https://cylera.host/risk/vulnerabilities?page=0&page_size=100]
  [Cassette: 'cylera'] Found matching interaction for [get https://cylera.host/risk/vulnerabilities?page=0&page_size=100] at index 1: [200 "{ \"vulnerabilities\": [ { \"ip_address\": \"192.168.1.40\", \"mac_address\": \"00:15:bd:"]
[webmock] Identified request type (stubbed_by_vcr) for [get https://cylera.host/risk/vulnerabilities?page=0&page_size=100]
[webmock] Handling request: [get https://cylera.host/inventory/devices?page=0&page_size=100] (disabled: false)
  [Cassette: 'cylera'] Checking if [get https://cylera.host/inventory/devices?page=0&page_size=100] matches [get https://cylera.host/inventory/devices?page=0&page_size=100] using [:method, :uri]
    [Cassette: 'cylera'] method (matched): current request [get https://cylera.host/inventory/devices?page=0&page_size=100] vs [get https://cylera.host/inventory/devices?page=0&page_size=100]
    [Cassette: 'cylera'] uri (matched): current request [get https://cylera.host/inventory/devices?page=0&page_size=100] vs [get https://cylera.host/inventory/devices?page=0&page_size=100]
  [Cassette: 'cylera'] Found matching interaction for [get https://cylera.host/inventory/devices?page=0&page_size=100] at index 0: [200 "{ \"devices\": [ { \"aetitle\": \"NBXXCU\", \"class\": \"Infrastructure\", \"fda_class\": \"2"]
[webmock] Identified request type (stubbed_by_vcr) for [get https://cylera.host/inventory/devices?page=0&page_size=100]
[webmock] Handling request: [get https://cylera.host/risk/mitigations?vulnerability=CVE-2000-0761] (disabled: false)
  [Cassette: 'cylera'] Checking if [get https://cylera.host/risk/mitigations?vulnerability=CVE-2000-0761] matches [get https://cylera.host/risk/mitigations?vulnerability=CVE-2000-0761] using [:method, :uri]
    [Cassette: 'cylera'] method (matched): current request [get https://cylera.host/risk/mitigations?vulnerability=CVE-2000-0761] vs [get https://cylera.host/risk/mitigations?vulnerability=CVE-2000-0761]
    [Cassette: 'cylera'] uri (matched): current request [get https://cylera.host/risk/mitigations?vulnerability=CVE-2000-0761] vs [get https://cylera.host/risk/mitigations?vulnerability=CVE-2000-0761]
  [Cassette: 'cylera'] Found matching interaction for [get https://cylera.host/risk/mitigations?vulnerability=CVE-2000-0761] at index 0: [200 "{ \"description\": \"OS2/Warp 4.5 FTP server allows remote attackers to cause a den"]
[webmock] Identified request type (stubbed_by_vcr) for [get https://cylera.host/risk/mitigations?vulnerability=CVE-2000-0761]
[Cassette: 'cylera'] Initialized with options: {:record=>:once, :record_on_error=>true, :match_requests_on=>[:method, :uri], :allow_unused_http_interactions=>true, :serialize_with=>:yaml, :persist_with=>:file_system, :persister_options=>{}}
[webmock] Handling request: [get http://169.254.169.254/latest/metadata/] (disabled: false)
[webmock] Identified request type (externally_stubbed) for [get http://169.254.169.254/latest/metadata/]
[webmock] Handling request: [get http://169.254.169.254/latest/metadata/] (disabled: false)
[webmock] Identified request type (externally_stubbed) for [get http://169.254.169.254/latest/metadata/]
[webmock] Handling request: [post https://cylera.host/auth/login_user] (disabled: false)
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
  [Cassette: 'cylera'] Initialized HTTPInteractionList with request matchers [:method, :uri] and 4 interaction(s): { [post https://cylera.host/auth/login_user] => [200 "{ \"token\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzY29wZSI6InVzZXIiLCJpZCI6MTY"], [get https://cylera.host/inventory/devices?page=0&page_size=100] => [200 "{ \"devices\": [ { \"aetitle\": \"NBXXCU\", \"class\": \"Infrastructure\", \"fda_class\": \"2"], [get https://cylera.host/risk/vulnerabilities?page=0&page_size=100] => [200 "{ \"vulnerabilities\": [ { \"ip_address\": \"192.168.1.40\", \"mac_address\": \"00:15:bd:"], [get https://cylera.host/risk/mitigations?vulnerability=CVE-2000-0761] => [200 "{ \"description\": \"OS2/Warp 4.5 FTP server allows remote attackers to cause a den"] }
  [Cassette: 'cylera'] Checking if [post https://cylera.host/auth/login_user] matches [post https://cylera.host/auth/login_user] using [:method, :uri]
    [Cassette: 'cylera'] method (matched): current request [post https://cylera.host/auth/login_user] vs [post https://cylera.host/auth/login_user]
    [Cassette: 'cylera'] uri (matched): current request [post https://cylera.host/auth/login_user] vs [post https://cylera.host/auth/login_user]
  [Cassette: 'cylera'] Found matching interaction for [post https://cylera.host/auth/login_user] at index 0: [200 "{ \"token\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzY29wZSI6InVzZXIiLCJpZCI6MTY"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://cylera.host/auth/login_user]
[webmock] Handling request: [get http://169.254.169.254/latest/metadata/] (disabled: false)
[webmock] Identified request type (externally_stubbed) for [get http://169.254.169.254/latest/metadata/]
[webmock] Handling request: [get http://169.254.169.254/latest/metadata/] (disabled: false)
[webmock] Identified request type (externally_stubbed) for [get http://169.254.169.254/latest/metadata/]
[Cassette: 'cylera'] Initialized with options: {:record=>:once, :record_on_error=>true, :match_requests_on=>[:method, :uri], :allow_unused_http_interactions=>true, :serialize_with=>:yaml, :persist_with=>:file_system, :persister_options=>{}}
[webmock] Handling request: [get http://169.254.169.254/latest/metadata/] (disabled: false)
[webmock] Identified request type (externally_stubbed) for [get http://169.254.169.254/latest/metadata/]
[webmock] Handling request: [get http://169.254.169.254/latest/metadata/] (disabled: false)
[webmock] Identified request type (externally_stubbed) for [get http://169.254.169.254/latest/metadata/]
[webmock] Handling request: [post https://cylera.host/auth/login_user] (disabled: false)
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
  [Cassette: 'cylera'] Initialized HTTPInteractionList with request matchers [:method, :uri] and 4 interaction(s): { [post https://cylera.host/auth/login_user] => [200 "{ \"token\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzY29wZSI6InVzZXIiLCJpZCI6MTY"], [get https://cylera.host/inventory/devices?page=0&page_size=100] => [200 "{ \"devices\": [ { \"aetitle\": \"NBXXCU\", \"class\": \"Infrastructure\", \"fda_class\": \"2"], [get https://cylera.host/risk/vulnerabilities?page=0&page_size=100] => [200 "{ \"vulnerabilities\": [ { \"ip_address\": \"192.168.1.40\", \"mac_address\": \"00:15:bd:"], [get https://cylera.host/risk/mitigations?vulnerability=CVE-2000-0761] => [200 "{ \"description\": \"OS2/Warp 4.5 FTP server allows remote attackers to cause a den"] }
  [Cassette: 'cylera'] Checking if [post https://cylera.host/auth/login_user] matches [post https://cylera.host/auth/login_user] using [:method, :uri]
    [Cassette: 'cylera'] method (matched): current request [post https://cylera.host/auth/login_user] vs [post https://cylera.host/auth/login_user]
    [Cassette: 'cylera'] uri (matched): current request [post https://cylera.host/auth/login_user] vs [post https://cylera.host/auth/login_user]
  [Cassette: 'cylera'] Found matching interaction for [post https://cylera.host/auth/login_user] at index 0: [200 "{ \"token\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzY29wZSI6InVzZXIiLCJpZCI6MTY"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://cylera.host/auth/login_user]
[webmock] Handling request: [get https://cylera.host/risk/vulnerabilities?page=0&page_size=100] (disabled: false)
  [Cassette: 'cylera'] Checking if [get https://cylera.host/risk/vulnerabilities?page=0&page_size=100] matches [get https://cylera.host/inventory/devices?page=0&page_size=100] using [:method, :uri]
    [Cassette: 'cylera'] method (matched): current request [get https://cylera.host/risk/vulnerabilities?page=0&page_size=100] vs [get https://cylera.host/inventory/devices?page=0&page_size=100]
    [Cassette: 'cylera'] uri (did not match): current request [get https://cylera.host/risk/vulnerabilities?page=0&page_size=100] vs [get https://cylera.host/inventory/devices?page=0&page_size=100]
  [Cassette: 'cylera'] Checking if [get https://cylera.host/risk/vulnerabilities?page=0&page_size=100] matches [get https://cylera.host/risk/vulnerabilities?page=0&page_size=100] using [:method, :uri]
    [Cassette: 'cylera'] method (matched): current request [get https://cylera.host/risk/vulnerabilities?page=0&page_size=100] vs [get https://cylera.host/risk/vulnerabilities?page=0&page_size=100]
    [Cassette: 'cylera'] uri (matched): current request [get https://cylera.host/risk/vulnerabilities?page=0&page_size=100] vs [get https://cylera.host/risk/vulnerabilities?page=0&page_size=100]
  [Cassette: 'cylera'] Found matching interaction for [get https://cylera.host/risk/vulnerabilities?page=0&page_size=100] at index 1: [200 "{ \"vulnerabilities\": [ { \"ip_address\": \"192.168.1.40\", \"mac_address\": \"00:15:bd:"]
[webmock] Identified request type (stubbed_by_vcr) for [get https://cylera.host/risk/vulnerabilities?page=0&page_size=100]
[webmock] Handling request: [get https://cylera.host/inventory/devices?page=0&page_size=100] (disabled: false)
  [Cassette: 'cylera'] Checking if [get https://cylera.host/inventory/devices?page=0&page_size=100] matches [get https://cylera.host/inventory/devices?page=0&page_size=100] using [:method, :uri]
    [Cassette: 'cylera'] method (matched): current request [get https://cylera.host/inventory/devices?page=0&page_size=100] vs [get https://cylera.host/inventory/devices?page=0&page_size=100]
    [Cassette: 'cylera'] uri (matched): current request [get https://cylera.host/inventory/devices?page=0&page_size=100] vs [get https://cylera.host/inventory/devices?page=0&page_size=100]
  [Cassette: 'cylera'] Found matching interaction for [get https://cylera.host/inventory/devices?page=0&page_size=100] at index 0: [200 "{ \"devices\": [ { \"aetitle\": \"NBXXCU\", \"class\": \"Infrastructure\", \"fda_class\": \"2"]
[webmock] Identified request type (stubbed_by_vcr) for [get https://cylera.host/inventory/devices?page=0&page_size=100]
[webmock] Handling request: [get https://cylera.host/risk/mitigations?vulnerability=CVE-2000-0761] (disabled: false)
  [Cassette: 'cylera'] Checking if [get https://cylera.host/risk/mitigations?vulnerability=CVE-2000-0761] matches [get https://cylera.host/risk/mitigations?vulnerability=CVE-2000-0761] using [:method, :uri]
    [Cassette: 'cylera'] method (matched): current request [get https://cylera.host/risk/mitigations?vulnerability=CVE-2000-0761] vs [get https://cylera.host/risk/mitigations?vulnerability=CVE-2000-0761]
    [Cassette: 'cylera'] uri (matched): current request [get https://cylera.host/risk/mitigations?vulnerability=CVE-2000-0761] vs [get https://cylera.host/risk/mitigations?vulnerability=CVE-2000-0761]
  [Cassette: 'cylera'] Found matching interaction for [get https://cylera.host/risk/mitigations?vulnerability=CVE-2000-0761] at index 0: [200 "{ \"description\": \"OS2/Warp 4.5 FTP server allows remote attackers to cause a den"]
[webmock] Identified request type (stubbed_by_vcr) for [get https://cylera.host/risk/mitigations?vulnerability=CVE-2000-0761]
[Cassette: 'cylera'] Initialized with options: {:record=>:once, :record_on_error=>true, :match_requests_on=>[:method, :uri], :allow_unused_http_interactions=>true, :serialize_with=>:yaml, :persist_with=>:file_system, :persister_options=>{}}
[webmock] Handling request: [get http://169.254.169.254/latest/metadata/] (disabled: false)
[webmock] Identified request type (externally_stubbed) for [get http://169.254.169.254/latest/metadata/]
[webmock] Handling request: [get http://169.254.169.254/latest/metadata/] (disabled: false)
[webmock] Identified request type (externally_stubbed) for [get http://169.254.169.254/latest/metadata/]
[webmock] Handling request: [post https://cylera.host/auth/login_user] (disabled: false)
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
  [Cassette: 'cylera'] Initialized HTTPInteractionList with request matchers [:method, :uri] and 4 interaction(s): { [post https://cylera.host/auth/login_user] => [200 "{ \"token\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzY29wZSI6InVzZXIiLCJpZCI6MTY"], [get https://cylera.host/inventory/devices?page=0&page_size=100] => [200 "{ \"devices\": [ { \"aetitle\": \"NBXXCU\", \"class\": \"Infrastructure\", \"fda_class\": \"2"], [get https://cylera.host/risk/vulnerabilities?page=0&page_size=100] => [200 "{ \"vulnerabilities\": [ { \"ip_address\": \"192.168.1.40\", \"mac_address\": \"00:15:bd:"], [get https://cylera.host/risk/mitigations?vulnerability=CVE-2000-0761] => [200 "{ \"description\": \"OS2/Warp 4.5 FTP server allows remote attackers to cause a den"] }
  [Cassette: 'cylera'] Checking if [post https://cylera.host/auth/login_user] matches [post https://cylera.host/auth/login_user] using [:method, :uri]
    [Cassette: 'cylera'] method (matched): current request [post https://cylera.host/auth/login_user] vs [post https://cylera.host/auth/login_user]
    [Cassette: 'cylera'] uri (matched): current request [post https://cylera.host/auth/login_user] vs [post https://cylera.host/auth/login_user]
  [Cassette: 'cylera'] Found matching interaction for [post https://cylera.host/auth/login_user] at index 0: [200 "{ \"token\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzY29wZSI6InVzZXIiLCJpZCI6MTY"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://cylera.host/auth/login_user]
[webmock] Handling request: [get https://cylera.host/risk/vulnerabilities?page=0&page_size=100] (disabled: false)
  [Cassette: 'cylera'] Checking if [get https://cylera.host/risk/vulnerabilities?page=0&page_size=100] matches [get https://cylera.host/inventory/devices?page=0&page_size=100] using [:method, :uri]
    [Cassette: 'cylera'] method (matched): current request [get https://cylera.host/risk/vulnerabilities?page=0&page_size=100] vs [get https://cylera.host/inventory/devices?page=0&page_size=100]
    [Cassette: 'cylera'] uri (did not match): current request [get https://cylera.host/risk/vulnerabilities?page=0&page_size=100] vs [get https://cylera.host/inventory/devices?page=0&page_size=100]
  [Cassette: 'cylera'] Checking if [get https://cylera.host/risk/vulnerabilities?page=0&page_size=100] matches [get https://cylera.host/risk/vulnerabilities?page=0&page_size=100] using [:method, :uri]
    [Cassette: 'cylera'] method (matched): current request [get https://cylera.host/risk/vulnerabilities?page=0&page_size=100] vs [get https://cylera.host/risk/vulnerabilities?page=0&page_size=100]
    [Cassette: 'cylera'] uri (matched): current request [get https://cylera.host/risk/vulnerabilities?page=0&page_size=100] vs [get https://cylera.host/risk/vulnerabilities?page=0&page_size=100]
  [Cassette: 'cylera'] Found matching interaction for [get https://cylera.host/risk/vulnerabilities?page=0&page_size=100] at index 1: [200 "{ \"vulnerabilities\": [ { \"ip_address\": \"192.168.1.40\", \"mac_address\": \"00:15:bd:"]
[webmock] Identified request type (stubbed_by_vcr) for [get https://cylera.host/risk/vulnerabilities?page=0&page_size=100]
[webmock] Handling request: [get https://cylera.host/inventory/devices?page=0&page_size=100] (disabled: false)
  [Cassette: 'cylera'] Checking if [get https://cylera.host/inventory/devices?page=0&page_size=100] matches [get https://cylera.host/inventory/devices?page=0&page_size=100] using [:method, :uri]
    [Cassette: 'cylera'] method (matched): current request [get https://cylera.host/inventory/devices?page=0&page_size=100] vs [get https://cylera.host/inventory/devices?page=0&page_size=100]
    [Cassette: 'cylera'] uri (matched): current request [get https://cylera.host/inventory/devices?page=0&page_size=100] vs [get https://cylera.host/inventory/devices?page=0&page_size=100]
  [Cassette: 'cylera'] Found matching interaction for [get https://cylera.host/inventory/devices?page=0&page_size=100] at index 0: [200 "{ \"devices\": [ { \"aetitle\": \"NBXXCU\", \"class\": \"Infrastructure\", \"fda_class\": \"2"]
[webmock] Identified request type (stubbed_by_vcr) for [get https://cylera.host/inventory/devices?page=0&page_size=100]
[webmock] Handling request: [get https://cylera.host/risk/mitigations?vulnerability=CVE-2000-0761] (disabled: false)
  [Cassette: 'cylera'] Checking if [get https://cylera.host/risk/mitigations?vulnerability=CVE-2000-0761] matches [get https://cylera.host/risk/mitigations?vulnerability=CVE-2000-0761] using [:method, :uri]
    [Cassette: 'cylera'] method (matched): current request [get https://cylera.host/risk/mitigations?vulnerability=CVE-2000-0761] vs [get https://cylera.host/risk/mitigations?vulnerability=CVE-2000-0761]
    [Cassette: 'cylera'] uri (matched): current request [get https://cylera.host/risk/mitigations?vulnerability=CVE-2000-0761] vs [get https://cylera.host/risk/mitigations?vulnerability=CVE-2000-0761]
  [Cassette: 'cylera'] Found matching interaction for [get https://cylera.host/risk/mitigations?vulnerability=CVE-2000-0761] at index 0: [200 "{ \"description\": \"OS2/Warp 4.5 FTP server allows remote attackers to cause a den"]
[webmock] Identified request type (stubbed_by_vcr) for [get https://cylera.host/risk/mitigations?vulnerability=CVE-2000-0761]
[Cassette: 'cylera'] Initialized with options: {:record=>:once, :record_on_error=>true, :match_requests_on=>[:method, :uri], :allow_unused_http_interactions=>true, :serialize_with=>:yaml, :persist_with=>:file_system, :persister_options=>{}}
[webmock] Handling request: [get http://169.254.169.254/latest/metadata/] (disabled: false)
[webmock] Identified request type (externally_stubbed) for [get http://169.254.169.254/latest/metadata/]
[webmock] Handling request: [get http://169.254.169.254/latest/metadata/] (disabled: false)
[webmock] Identified request type (externally_stubbed) for [get http://169.254.169.254/latest/metadata/]
[webmock] Handling request: [post https://cylera.host/auth/login_user] (disabled: false)
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
  [Cassette: 'cylera'] Initialized HTTPInteractionList with request matchers [:method, :uri] and 4 interaction(s): { [post https://cylera.host/auth/login_user] => [200 "{ \"token\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzY29wZSI6InVzZXIiLCJpZCI6MTY"], [get https://cylera.host/inventory/devices?page=0&page_size=100] => [200 "{ \"devices\": [ { \"aetitle\": \"NBXXCU\", \"class\": \"Infrastructure\", \"fda_class\": \"2"], [get https://cylera.host/risk/vulnerabilities?page=0&page_size=100] => [200 "{ \"vulnerabilities\": [ { \"ip_address\": \"192.168.1.40\", \"mac_address\": \"00:15:bd:"], [get https://cylera.host/risk/mitigations?vulnerability=CVE-2000-0761] => [200 "{ \"description\": \"OS2/Warp 4.5 FTP server allows remote attackers to cause a den"] }
  [Cassette: 'cylera'] Checking if [post https://cylera.host/auth/login_user] matches [post https://cylera.host/auth/login_user] using [:method, :uri]
    [Cassette: 'cylera'] method (matched): current request [post https://cylera.host/auth/login_user] vs [post https://cylera.host/auth/login_user]
    [Cassette: 'cylera'] uri (matched): current request [post https://cylera.host/auth/login_user] vs [post https://cylera.host/auth/login_user]
  [Cassette: 'cylera'] Found matching interaction for [post https://cylera.host/auth/login_user] at index 0: [200 "{ \"token\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzY29wZSI6InVzZXIiLCJpZCI6MTY"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://cylera.host/auth/login_user]
[webmock] Handling request: [get https://cylera.host/risk/vulnerabilities?page=0&page_size=100] (disabled: false)
  [Cassette: 'cylera'] Checking if [get https://cylera.host/risk/vulnerabilities?page=0&page_size=100] matches [get https://cylera.host/inventory/devices?page=0&page_size=100] using [:method, :uri]
    [Cassette: 'cylera'] method (matched): current request [get https://cylera.host/risk/vulnerabilities?page=0&page_size=100] vs [get https://cylera.host/inventory/devices?page=0&page_size=100]
    [Cassette: 'cylera'] uri (did not match): current request [get https://cylera.host/risk/vulnerabilities?page=0&page_size=100] vs [get https://cylera.host/inventory/devices?page=0&page_size=100]
  [Cassette: 'cylera'] Checking if [get https://cylera.host/risk/vulnerabilities?page=0&page_size=100] matches [get https://cylera.host/risk/vulnerabilities?page=0&page_size=100] using [:method, :uri]
    [Cassette: 'cylera'] method (matched): current request [get https://cylera.host/risk/vulnerabilities?page=0&page_size=100] vs [get https://cylera.host/risk/vulnerabilities?page=0&page_size=100]
    [Cassette: 'cylera'] uri (matched): current request [get https://cylera.host/risk/vulnerabilities?page=0&page_size=100] vs [get https://cylera.host/risk/vulnerabilities?page=0&page_size=100]
  [Cassette: 'cylera'] Found matching interaction for [get https://cylera.host/risk/vulnerabilities?page=0&page_size=100] at index 1: [200 "{ \"vulnerabilities\": [ { \"ip_address\": \"192.168.1.40\", \"mac_address\": \"00:15:bd:"]
[webmock] Identified request type (stubbed_by_vcr) for [get https://cylera.host/risk/vulnerabilities?page=0&page_size=100]
[webmock] Handling request: [get https://cylera.host/inventory/devices?page=0&page_size=100] (disabled: false)
  [Cassette: 'cylera'] Checking if [get https://cylera.host/inventory/devices?page=0&page_size=100] matches [get https://cylera.host/inventory/devices?page=0&page_size=100] using [:method, :uri]
    [Cassette: 'cylera'] method (matched): current request [get https://cylera.host/inventory/devices?page=0&page_size=100] vs [get https://cylera.host/inventory/devices?page=0&page_size=100]
    [Cassette: 'cylera'] uri (matched): current request [get https://cylera.host/inventory/devices?page=0&page_size=100] vs [get https://cylera.host/inventory/devices?page=0&page_size=100]
  [Cassette: 'cylera'] Found matching interaction for [get https://cylera.host/inventory/devices?page=0&page_size=100] at index 0: [200 "{ \"devices\": [ { \"aetitle\": \"NBXXCU\", \"class\": \"Infrastructure\", \"fda_class\": \"2"]
[webmock] Identified request type (stubbed_by_vcr) for [get https://cylera.host/inventory/devices?page=0&page_size=100]
[webmock] Handling request: [get https://cylera.host/risk/mitigations?vulnerability=CVE-2000-0761] (disabled: false)
  [Cassette: 'cylera'] Checking if [get https://cylera.host/risk/mitigations?vulnerability=CVE-2000-0761] matches [get https://cylera.host/risk/mitigations?vulnerability=CVE-2000-0761] using [:method, :uri]
    [Cassette: 'cylera'] method (matched): current request [get https://cylera.host/risk/mitigations?vulnerability=CVE-2000-0761] vs [get https://cylera.host/risk/mitigations?vulnerability=CVE-2000-0761]
    [Cassette: 'cylera'] uri (matched): current request [get https://cylera.host/risk/mitigations?vulnerability=CVE-2000-0761] vs [get https://cylera.host/risk/mitigations?vulnerability=CVE-2000-0761]
  [Cassette: 'cylera'] Found matching interaction for [get https://cylera.host/risk/mitigations?vulnerability=CVE-2000-0761] at index 0: [200 "{ \"description\": \"OS2/Warp 4.5 FTP server allows remote attackers to cause a den"]
[webmock] Identified request type (stubbed_by_vcr) for [get https://cylera.host/risk/mitigations?vulnerability=CVE-2000-0761]
[Cassette: 'cylera'] Initialized with options: {:record=>:once, :record_on_error=>true, :match_requests_on=>[:method, :uri], :allow_unused_http_interactions=>true, :serialize_with=>:yaml, :persist_with=>:file_system, :persister_options=>{}}
[webmock] Handling request: [get http://169.254.169.254/latest/metadata/] (disabled: false)
[webmock] Identified request type (externally_stubbed) for [get http://169.254.169.254/latest/metadata/]
[webmock] Handling request: [get http://169.254.169.254/latest/metadata/] (disabled: false)
[webmock] Identified request type (externally_stubbed) for [get http://169.254.169.254/latest/metadata/]
[webmock] Handling request: [post https://cylera.host/auth/login_user] (disabled: false)
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
  [Cassette: 'cylera'] Initialized HTTPInteractionList with request matchers [:method, :uri] and 4 interaction(s): { [post https://cylera.host/auth/login_user] => [200 "{ \"token\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzY29wZSI6InVzZXIiLCJpZCI6MTY"], [get https://cylera.host/inventory/devices?page=0&page_size=100] => [200 "{ \"devices\": [ { \"aetitle\": \"NBXXCU\", \"class\": \"Infrastructure\", \"fda_class\": \"2"], [get https://cylera.host/risk/vulnerabilities?page=0&page_size=100] => [200 "{ \"vulnerabilities\": [ { \"ip_address\": \"192.168.1.40\", \"mac_address\": \"00:15:bd:"], [get https://cylera.host/risk/mitigations?vulnerability=CVE-2000-0761] => [200 "{ \"description\": \"OS2/Warp 4.5 FTP server allows remote attackers to cause a den"] }
  [Cassette: 'cylera'] Checking if [post https://cylera.host/auth/login_user] matches [post https://cylera.host/auth/login_user] using [:method, :uri]
    [Cassette: 'cylera'] method (matched): current request [post https://cylera.host/auth/login_user] vs [post https://cylera.host/auth/login_user]
    [Cassette: 'cylera'] uri (matched): current request [post https://cylera.host/auth/login_user] vs [post https://cylera.host/auth/login_user]
  [Cassette: 'cylera'] Found matching interaction for [post https://cylera.host/auth/login_user] at index 0: [200 "{ \"token\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzY29wZSI6InVzZXIiLCJpZCI6MTY"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://cylera.host/auth/login_user]
[webmock] Handling request: [get https://cylera.host/risk/vulnerabilities?page=0&page_size=100] (disabled: false)
  [Cassette: 'cylera'] Checking if [get https://cylera.host/risk/vulnerabilities?page=0&page_size=100] matches [get https://cylera.host/inventory/devices?page=0&page_size=100] using [:method, :uri]
    [Cassette: 'cylera'] method (matched): current request [get https://cylera.host/risk/vulnerabilities?page=0&page_size=100] vs [get https://cylera.host/inventory/devices?page=0&page_size=100]
    [Cassette: 'cylera'] uri (did not match): current request [get https://cylera.host/risk/vulnerabilities?page=0&page_size=100] vs [get https://cylera.host/inventory/devices?page=0&page_size=100]
  [Cassette: 'cylera'] Checking if [get https://cylera.host/risk/vulnerabilities?page=0&page_size=100] matches [get https://cylera.host/risk/vulnerabilities?page=0&page_size=100] using [:method, :uri]
    [Cassette: 'cylera'] method (matched): current request [get https://cylera.host/risk/vulnerabilities?page=0&page_size=100] vs [get https://cylera.host/risk/vulnerabilities?page=0&page_size=100]
    [Cassette: 'cylera'] uri (matched): current request [get https://cylera.host/risk/vulnerabilities?page=0&page_size=100] vs [get https://cylera.host/risk/vulnerabilities?page=0&page_size=100]
  [Cassette: 'cylera'] Found matching interaction for [get https://cylera.host/risk/vulnerabilities?page=0&page_size=100] at index 1: [200 "{ \"vulnerabilities\": [ { \"ip_address\": \"192.168.1.40\", \"mac_address\": \"00:15:bd:"]
[webmock] Identified request type (stubbed_by_vcr) for [get https://cylera.host/risk/vulnerabilities?page=0&page_size=100]
[webmock] Handling request: [get https://cylera.host/inventory/devices?page=0&page_size=100] (disabled: false)
  [Cassette: 'cylera'] Checking if [get https://cylera.host/inventory/devices?page=0&page_size=100] matches [get https://cylera.host/inventory/devices?page=0&page_size=100] using [:method, :uri]
    [Cassette: 'cylera'] method (matched): current request [get https://cylera.host/inventory/devices?page=0&page_size=100] vs [get https://cylera.host/inventory/devices?page=0&page_size=100]
    [Cassette: 'cylera'] uri (matched): current request [get https://cylera.host/inventory/devices?page=0&page_size=100] vs [get https://cylera.host/inventory/devices?page=0&page_size=100]
  [Cassette: 'cylera'] Found matching interaction for [get https://cylera.host/inventory/devices?page=0&page_size=100] at index 0: [200 "{ \"devices\": [ { \"aetitle\": \"NBXXCU\", \"class\": \"Infrastructure\", \"fda_class\": \"2"]
[webmock] Identified request type (stubbed_by_vcr) for [get https://cylera.host/inventory/devices?page=0&page_size=100]
[webmock] Handling request: [get https://cylera.host/risk/mitigations?vulnerability=CVE-2000-0761] (disabled: false)
  [Cassette: 'cylera'] Checking if [get https://cylera.host/risk/mitigations?vulnerability=CVE-2000-0761] matches [get https://cylera.host/risk/mitigations?vulnerability=CVE-2000-0761] using [:method, :uri]
    [Cassette: 'cylera'] method (matched): current request [get https://cylera.host/risk/mitigations?vulnerability=CVE-2000-0761] vs [get https://cylera.host/risk/mitigations?vulnerability=CVE-2000-0761]
    [Cassette: 'cylera'] uri (matched): current request [get https://cylera.host/risk/mitigations?vulnerability=CVE-2000-0761] vs [get https://cylera.host/risk/mitigations?vulnerability=CVE-2000-0761]
  [Cassette: 'cylera'] Found matching interaction for [get https://cylera.host/risk/mitigations?vulnerability=CVE-2000-0761] at index 0: [200 "{ \"description\": \"OS2/Warp 4.5 FTP server allows remote attackers to cause a den"]
[webmock] Identified request type (stubbed_by_vcr) for [get https://cylera.host/risk/mitigations?vulnerability=CVE-2000-0761]
[Cassette: 'cylera'] Initialized with options: {:record=>:once, :record_on_error=>true, :match_requests_on=>[:method, :uri], :allow_unused_http_interactions=>true, :serialize_with=>:yaml, :persist_with=>:file_system, :persister_options=>{}}
[webmock] Handling request: [get http://169.254.169.254/latest/metadata/] (disabled: false)
[webmock] Identified request type (externally_stubbed) for [get http://169.254.169.254/latest/metadata/]
[webmock] Handling request: [get http://169.254.169.254/latest/metadata/] (disabled: false)
[webmock] Identified request type (externally_stubbed) for [get http://169.254.169.254/latest/metadata/]
[Cassette: 'cylera'] Initialized with options: {:record=>:once, :record_on_error=>true, :match_requests_on=>[:method, :uri], :allow_unused_http_interactions=>true, :serialize_with=>:yaml, :persist_with=>:file_system, :persister_options=>{}}
[webmock] Handling request: [post https://cylera.host/auth/login_user] (disabled: false)
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
  [Cassette: 'cylera'] Initialized HTTPInteractionList with request matchers [:method, :uri] and 4 interaction(s): { [post https://cylera.host/auth/login_user] => [200 "{ \"token\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzY29wZSI6InVzZXIiLCJpZCI6MTY"], [get https://cylera.host/inventory/devices?page=0&page_size=100] => [200 "{ \"devices\": [ { \"aetitle\": \"NBXXCU\", \"class\": \"Infrastructure\", \"fda_class\": \"2"], [get https://cylera.host/risk/vulnerabilities?page=0&page_size=100] => [200 "{ \"vulnerabilities\": [ { \"ip_address\": \"192.168.1.40\", \"mac_address\": \"00:15:bd:"], [get https://cylera.host/risk/mitigations?vulnerability=CVE-2000-0761] => [200 "{ \"description\": \"OS2/Warp 4.5 FTP server allows remote attackers to cause a den"] }
  [Cassette: 'cylera'] Checking if [post https://cylera.host/auth/login_user] matches [post https://cylera.host/auth/login_user] using [:method, :uri]
    [Cassette: 'cylera'] method (matched): current request [post https://cylera.host/auth/login_user] vs [post https://cylera.host/auth/login_user]
    [Cassette: 'cylera'] uri (matched): current request [post https://cylera.host/auth/login_user] vs [post https://cylera.host/auth/login_user]
  [Cassette: 'cylera'] Found matching interaction for [post https://cylera.host/auth/login_user] at index 0: [200 "{ \"token\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzY29wZSI6InVzZXIiLCJpZCI6MTY"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://cylera.host/auth/login_user]
[webmock] Handling request: [get https://cylera.host/inventory/devices?page=0&page_size=100] (disabled: false)
  [Cassette: 'cylera'] Checking if [get https://cylera.host/inventory/devices?page=0&page_size=100] matches [get https://cylera.host/inventory/devices?page=0&page_size=100] using [:method, :uri]
    [Cassette: 'cylera'] method (matched): current request [get https://cylera.host/inventory/devices?page=0&page_size=100] vs [get https://cylera.host/inventory/devices?page=0&page_size=100]
    [Cassette: 'cylera'] uri (matched): current request [get https://cylera.host/inventory/devices?page=0&page_size=100] vs [get https://cylera.host/inventory/devices?page=0&page_size=100]
  [Cassette: 'cylera'] Found matching interaction for [get https://cylera.host/inventory/devices?page=0&page_size=100] at index 0: [200 "{ \"devices\": [ { \"aetitle\": \"NBXXCU\", \"class\": \"Infrastructure\", \"fda_class\": \"2"]
[webmock] Identified request type (stubbed_by_vcr) for [get https://cylera.host/inventory/devices?page=0&page_size=100]
[Cassette: 'cylera'] Initialized with options: {:record=>:once, :record_on_error=>true, :match_requests_on=>[:method, :uri], :allow_unused_http_interactions=>true, :serialize_with=>:yaml, :persist_with=>:file_system, :persister_options=>{}}
[webmock] Handling request: [post https://cylera.host/auth/login_user] (disabled: false)
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
  [Cassette: 'cylera'] Initialized HTTPInteractionList with request matchers [:method, :uri] and 4 interaction(s): { [post https://cylera.host/auth/login_user] => [200 "{ \"token\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzY29wZSI6InVzZXIiLCJpZCI6MTY"], [get https://cylera.host/inventory/devices?page=0&page_size=100] => [200 "{ \"devices\": [ { \"aetitle\": \"NBXXCU\", \"class\": \"Infrastructure\", \"fda_class\": \"2"], [get https://cylera.host/risk/vulnerabilities?page=0&page_size=100] => [200 "{ \"vulnerabilities\": [ { \"ip_address\": \"192.168.1.40\", \"mac_address\": \"00:15:bd:"], [get https://cylera.host/risk/mitigations?vulnerability=CVE-2000-0761] => [200 "{ \"description\": \"OS2/Warp 4.5 FTP server allows remote attackers to cause a den"] }
  [Cassette: 'cylera'] Checking if [post https://cylera.host/auth/login_user] matches [post https://cylera.host/auth/login_user] using [:method, :uri]
    [Cassette: 'cylera'] method (matched): current request [post https://cylera.host/auth/login_user] vs [post https://cylera.host/auth/login_user]
    [Cassette: 'cylera'] uri (matched): current request [post https://cylera.host/auth/login_user] vs [post https://cylera.host/auth/login_user]
  [Cassette: 'cylera'] Found matching interaction for [post https://cylera.host/auth/login_user] at index 0: [200 "{ \"token\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzY29wZSI6InVzZXIiLCJpZCI6MTY"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://cylera.host/auth/login_user]
[Cassette: 'cylera'] Initialized with options: {:record=>:once, :record_on_error=>true, :match_requests_on=>[:method, :uri], :allow_unused_http_interactions=>true, :serialize_with=>:yaml, :persist_with=>:file_system, :persister_options=>{}}
[webmock] Handling request: [post https://cylera.host/auth/login_user] (disabled: false)
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
  [Cassette: 'cylera'] Initialized HTTPInteractionList with request matchers [:method, :uri] and 4 interaction(s): { [post https://cylera.host/auth/login_user] => [200 "{ \"token\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzY29wZSI6InVzZXIiLCJpZCI6MTY"], [get https://cylera.host/inventory/devices?page=0&page_size=100] => [200 "{ \"devices\": [ { \"aetitle\": \"NBXXCU\", \"class\": \"Infrastructure\", \"fda_class\": \"2"], [get https://cylera.host/risk/vulnerabilities?page=0&page_size=100] => [200 "{ \"vulnerabilities\": [ { \"ip_address\": \"192.168.1.40\", \"mac_address\": \"00:15:bd:"], [get https://cylera.host/risk/mitigations?vulnerability=CVE-2000-0761] => [200 "{ \"description\": \"OS2/Warp 4.5 FTP server allows remote attackers to cause a den"] }
  [Cassette: 'cylera'] Checking if [post https://cylera.host/auth/login_user] matches [post https://cylera.host/auth/login_user] using [:method, :uri]
    [Cassette: 'cylera'] method (matched): current request [post https://cylera.host/auth/login_user] vs [post https://cylera.host/auth/login_user]
    [Cassette: 'cylera'] uri (matched): current request [post https://cylera.host/auth/login_user] vs [post https://cylera.host/auth/login_user]
  [Cassette: 'cylera'] Found matching interaction for [post https://cylera.host/auth/login_user] at index 0: [200 "{ \"token\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzY29wZSI6InVzZXIiLCJpZCI6MTY"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://cylera.host/auth/login_user]
[webmock] Handling request: [get https://cylera.host/risk/vulnerabilities?page=0&page_size=100] (disabled: false)
  [Cassette: 'cylera'] Checking if [get https://cylera.host/risk/vulnerabilities?page=0&page_size=100] matches [get https://cylera.host/inventory/devices?page=0&page_size=100] using [:method, :uri]
    [Cassette: 'cylera'] method (matched): current request [get https://cylera.host/risk/vulnerabilities?page=0&page_size=100] vs [get https://cylera.host/inventory/devices?page=0&page_size=100]
    [Cassette: 'cylera'] uri (did not match): current request [get https://cylera.host/risk/vulnerabilities?page=0&page_size=100] vs [get https://cylera.host/inventory/devices?page=0&page_size=100]
  [Cassette: 'cylera'] Checking if [get https://cylera.host/risk/vulnerabilities?page=0&page_size=100] matches [get https://cylera.host/risk/vulnerabilities?page=0&page_size=100] using [:method, :uri]
    [Cassette: 'cylera'] method (matched): current request [get https://cylera.host/risk/vulnerabilities?page=0&page_size=100] vs [get https://cylera.host/risk/vulnerabilities?page=0&page_size=100]
    [Cassette: 'cylera'] uri (matched): current request [get https://cylera.host/risk/vulnerabilities?page=0&page_size=100] vs [get https://cylera.host/risk/vulnerabilities?page=0&page_size=100]
  [Cassette: 'cylera'] Found matching interaction for [get https://cylera.host/risk/vulnerabilities?page=0&page_size=100] at index 1: [200 "{ \"vulnerabilities\": [ { \"ip_address\": \"192.168.1.40\", \"mac_address\": \"00:15:bd:"]
[webmock] Identified request type (stubbed_by_vcr) for [get https://cylera.host/risk/vulnerabilities?page=0&page_size=100]
[Cassette: 'cylera'] Initialized with options: {:record=>:once, :record_on_error=>true, :match_requests_on=>[:method, :uri], :allow_unused_http_interactions=>true, :serialize_with=>:yaml, :persist_with=>:file_system, :persister_options=>{}}
[webmock] Handling request: [post https://cylera.host/auth/login_user] (disabled: false)
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
  [Cassette: 'cylera'] Initialized HTTPInteractionList with request matchers [:method, :uri] and 4 interaction(s): { [post https://cylera.host/auth/login_user] => [200 "{ \"token\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzY29wZSI6InVzZXIiLCJpZCI6MTY"], [get https://cylera.host/inventory/devices?page=0&page_size=100] => [200 "{ \"devices\": [ { \"aetitle\": \"NBXXCU\", \"class\": \"Infrastructure\", \"fda_class\": \"2"], [get https://cylera.host/risk/vulnerabilities?page=0&page_size=100] => [200 "{ \"vulnerabilities\": [ { \"ip_address\": \"192.168.1.40\", \"mac_address\": \"00:15:bd:"], [get https://cylera.host/risk/mitigations?vulnerability=CVE-2000-0761] => [200 "{ \"description\": \"OS2/Warp 4.5 FTP server allows remote attackers to cause a den"] }
  [Cassette: 'cylera'] Checking if [post https://cylera.host/auth/login_user] matches [post https://cylera.host/auth/login_user] using [:method, :uri]
    [Cassette: 'cylera'] method (matched): current request [post https://cylera.host/auth/login_user] vs [post https://cylera.host/auth/login_user]
    [Cassette: 'cylera'] uri (matched): current request [post https://cylera.host/auth/login_user] vs [post https://cylera.host/auth/login_user]
  [Cassette: 'cylera'] Found matching interaction for [post https://cylera.host/auth/login_user] at index 0: [200 "{ \"token\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzY29wZSI6InVzZXIiLCJpZCI6MTY"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://cylera.host/auth/login_user]
[Cassette: 'cylera'] Initialized with options: {:record=>:once, :record_on_error=>true, :match_requests_on=>[:method, :uri], :allow_unused_http_interactions=>true, :serialize_with=>:yaml, :persist_with=>:file_system, :persister_options=>{}}
[webmock] Handling request: [post https://cylera.host/auth/login_user] (disabled: false)
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
  [Cassette: 'cylera'] Initialized HTTPInteractionList with request matchers [:method, :uri] and 4 interaction(s): { [post https://cylera.host/auth/login_user] => [200 "{ \"token\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzY29wZSI6InVzZXIiLCJpZCI6MTY"], [get https://cylera.host/inventory/devices?page=0&page_size=100] => [200 "{ \"devices\": [ { \"aetitle\": \"NBXXCU\", \"class\": \"Infrastructure\", \"fda_class\": \"2"], [get https://cylera.host/risk/vulnerabilities?page=0&page_size=100] => [200 "{ \"vulnerabilities\": [ { \"ip_address\": \"192.168.1.40\", \"mac_address\": \"00:15:bd:"], [get https://cylera.host/risk/mitigations?vulnerability=CVE-2000-0761] => [200 "{ \"description\": \"OS2/Warp 4.5 FTP server allows remote attackers to cause a den"] }
  [Cassette: 'cylera'] Checking if [post https://cylera.host/auth/login_user] matches [post https://cylera.host/auth/login_user] using [:method, :uri]
    [Cassette: 'cylera'] method (matched): current request [post https://cylera.host/auth/login_user] vs [post https://cylera.host/auth/login_user]
    [Cassette: 'cylera'] uri (matched): current request [post https://cylera.host/auth/login_user] vs [post https://cylera.host/auth/login_user]
  [Cassette: 'cylera'] Found matching interaction for [post https://cylera.host/auth/login_user] at index 0: [200 "{ \"token\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzY29wZSI6InVzZXIiLCJpZCI6MTY"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://cylera.host/auth/login_user]
[webmock] Handling request: [get https://cylera.host/risk/mitigations?vulnerability=CVE-2000-0761] (disabled: false)
  [Cassette: 'cylera'] Checking if [get https://cylera.host/risk/mitigations?vulnerability=CVE-2000-0761] matches [get https://cylera.host/inventory/devices?page=0&page_size=100] using [:method, :uri]
    [Cassette: 'cylera'] method (matched): current request [get https://cylera.host/risk/mitigations?vulnerability=CVE-2000-0761] vs [get https://cylera.host/inventory/devices?page=0&page_size=100]
    [Cassette: 'cylera'] uri (did not match): current request [get https://cylera.host/risk/mitigations?vulnerability=CVE-2000-0761] vs [get https://cylera.host/inventory/devices?page=0&page_size=100]
  [Cassette: 'cylera'] Checking if [get https://cylera.host/risk/mitigations?vulnerability=CVE-2000-0761] matches [get https://cylera.host/risk/vulnerabilities?page=0&page_size=100] using [:method, :uri]
    [Cassette: 'cylera'] method (matched): current request [get https://cylera.host/risk/mitigations?vulnerability=CVE-2000-0761] vs [get https://cylera.host/risk/vulnerabilities?page=0&page_size=100]
    [Cassette: 'cylera'] uri (did not match): current request [get https://cylera.host/risk/mitigations?vulnerability=CVE-2000-0761] vs [get https://cylera.host/risk/vulnerabilities?page=0&page_size=100]
  [Cassette: 'cylera'] Checking if [get https://cylera.host/risk/mitigations?vulnerability=CVE-2000-0761] matches [get https://cylera.host/risk/mitigations?vulnerability=CVE-2000-0761] using [:method, :uri]
    [Cassette: 'cylera'] method (matched): current request [get https://cylera.host/risk/mitigations?vulnerability=CVE-2000-0761] vs [get https://cylera.host/risk/mitigations?vulnerability=CVE-2000-0761]
    [Cassette: 'cylera'] uri (matched): current request [get https://cylera.host/risk/mitigations?vulnerability=CVE-2000-0761] vs [get https://cylera.host/risk/mitigations?vulnerability=CVE-2000-0761]
  [Cassette: 'cylera'] Found matching interaction for [get https://cylera.host/risk/mitigations?vulnerability=CVE-2000-0761] at index 2: [200 "{ \"description\": \"OS2/Warp 4.5 FTP server allows remote attackers to cause a den"]
[webmock] Identified request type (stubbed_by_vcr) for [get https://cylera.host/risk/mitigations?vulnerability=CVE-2000-0761]
[Cassette: 'cylera'] Initialized with options: {:record=>:once, :record_on_error=>true, :match_requests_on=>[:method, :uri], :allow_unused_http_interactions=>true, :serialize_with=>:yaml, :persist_with=>:file_system, :persister_options=>{}}
[webmock] Handling request: [post https://cylera.host/auth/login_user] (disabled: false)
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
  [Cassette: 'cylera'] Initialized HTTPInteractionList with request matchers [:method, :uri] and 4 interaction(s): { [post https://cylera.host/auth/login_user] => [200 "{ \"token\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzY29wZSI6InVzZXIiLCJpZCI6MTY"], [get https://cylera.host/inventory/devices?page=0&page_size=100] => [200 "{ \"devices\": [ { \"aetitle\": \"NBXXCU\", \"class\": \"Infrastructure\", \"fda_class\": \"2"], [get https://cylera.host/risk/vulnerabilities?page=0&page_size=100] => [200 "{ \"vulnerabilities\": [ { \"ip_address\": \"192.168.1.40\", \"mac_address\": \"00:15:bd:"], [get https://cylera.host/risk/mitigations?vulnerability=CVE-2000-0761] => [200 "{ \"description\": \"OS2/Warp 4.5 FTP server allows remote attackers to cause a den"] }
  [Cassette: 'cylera'] Checking if [post https://cylera.host/auth/login_user] matches [post https://cylera.host/auth/login_user] using [:method, :uri]
    [Cassette: 'cylera'] method (matched): current request [post https://cylera.host/auth/login_user] vs [post https://cylera.host/auth/login_user]
    [Cassette: 'cylera'] uri (matched): current request [post https://cylera.host/auth/login_user] vs [post https://cylera.host/auth/login_user]
  [Cassette: 'cylera'] Found matching interaction for [post https://cylera.host/auth/login_user] at index 0: [200 "{ \"token\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzY29wZSI6InVzZXIiLCJpZCI6MTY"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://cylera.host/auth/login_user]
[Cassette: 'github_dependabot'] Initialized with options: {:record=>:once, :record_on_error=>true, :match_requests_on=>[:method, :uri], :allow_unused_http_interactions=>true, :serialize_with=>:yaml, :persist_with=>:file_system, :persister_options=>{}}
[webmock] Handling request: [get http://169.254.169.254/latest/metadata/] (disabled: false)
[webmock] Identified request type (externally_stubbed) for [get http://169.254.169.254/latest/metadata/]
[webmock] Handling request: [get http://169.254.169.254/latest/metadata/] (disabled: false)
[webmock] Identified request type (externally_stubbed) for [get http://169.254.169.254/latest/metadata/]
[webmock] Handling request: [post https://api.github.com/graphql] (disabled: false)
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
  [Cassette: 'github_dependabot'] Initialized HTTPInteractionList with request matchers [:method, :uri] and 23 interaction(s): { [post https://api.github.com/graphql] => [200 "{\"data\":{\"repositoryOwner\":{\"repositories\":{\"nodes\":[{\"name\":\"sjh\"},{\"name\":\"scr"], [post https://api.github.com/graphql] => [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/sjh\",\"vulnerabilityAlert"], [post https://api.github.com/graphql] => [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/scripts\",\"vulnerabilityA"], [post https://api.github.com/graphql] => [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/simple_services_monitor\""], [post https://api.github.com/graphql] => [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/Encryptor\",\"vulnerabilit"], [post https://api.github.com/graphql] => [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/event_manager\",\"vulnerab"], [post https://api.github.com/graphql] => [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/csv_parser\",\"vulnerabili"], [post https://api.github.com/graphql] => [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/reverbdemo\",\"vulnerabili"], [post https://api.github.com/graphql] => [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/Webdriver_Example\",\"vuln"], [post https://api.github.com/graphql] => [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/javascript-quiz\",\"vulner"], [post https://api.github.com/graphql] => [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/jquery-content-slider\",\""], [post https://api.github.com/graphql] => [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/todos\",\"vulnerabilityAle"], [post https://api.github.com/graphql] => [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/pagerduty\",\"vulnerabilit"], [post https://api.github.com/graphql] => [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/oratorlab\",\"vulnerabilit"], [post https://api.github.com/graphql] => [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/sublime_settings\",\"vulne"], [post https://api.github.com/graphql] => [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/DailyCodingProblems\",\"vu"], [post https://api.github.com/graphql] => [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/tmux\",\"vulnerabilityAler"], [post https://api.github.com/graphql] => [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/HTB-Notes-Private\",\"vuln"], [post https://api.github.com/graphql] => [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/Hack-The-Box-Walkthrough"], [post https://api.github.com/graphql] => [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/Pentesting-Scripts\",\"vul"], [post https://api.github.com/graphql] => [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/ftp-user-enum\",\"vulnerab"], [post https://api.github.com/graphql] => [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/Rspec-Capybara-Automatio"], [post https://api.github.com/graphql] => [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/advent_of_code_2020\",\"vu"] }
  [Cassette: 'github_dependabot'] Checking if [post https://api.github.com/graphql] matches [post https://api.github.com/graphql] using [:method, :uri]
    [Cassette: 'github_dependabot'] method (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
    [Cassette: 'github_dependabot'] uri (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
  [Cassette: 'github_dependabot'] Found matching interaction for [post https://api.github.com/graphql] at index 0: [200 "{\"data\":{\"repositoryOwner\":{\"repositories\":{\"nodes\":[{\"name\":\"sjh\"},{\"name\":\"scr"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://api.github.com/graphql]
[webmock] Handling request: [post https://api.github.com/graphql] (disabled: false)
  [Cassette: 'github_dependabot'] Checking if [post https://api.github.com/graphql] matches [post https://api.github.com/graphql] using [:method, :uri]
    [Cassette: 'github_dependabot'] method (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
    [Cassette: 'github_dependabot'] uri (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
  [Cassette: 'github_dependabot'] Found matching interaction for [post https://api.github.com/graphql] at index 0: [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/sjh\",\"vulnerabilityAlert"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://api.github.com/graphql]
[webmock] Handling request: [post https://api.github.com/graphql] (disabled: false)
  [Cassette: 'github_dependabot'] Checking if [post https://api.github.com/graphql] matches [post https://api.github.com/graphql] using [:method, :uri]
    [Cassette: 'github_dependabot'] method (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
    [Cassette: 'github_dependabot'] uri (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
  [Cassette: 'github_dependabot'] Found matching interaction for [post https://api.github.com/graphql] at index 0: [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/scripts\",\"vulnerabilityA"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://api.github.com/graphql]
[webmock] Handling request: [post https://api.github.com/graphql] (disabled: false)
  [Cassette: 'github_dependabot'] Checking if [post https://api.github.com/graphql] matches [post https://api.github.com/graphql] using [:method, :uri]
    [Cassette: 'github_dependabot'] method (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
    [Cassette: 'github_dependabot'] uri (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
  [Cassette: 'github_dependabot'] Found matching interaction for [post https://api.github.com/graphql] at index 0: [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/simple_services_monitor\""]
[webmock] Identified request type (stubbed_by_vcr) for [post https://api.github.com/graphql]
[webmock] Handling request: [post https://api.github.com/graphql] (disabled: false)
  [Cassette: 'github_dependabot'] Checking if [post https://api.github.com/graphql] matches [post https://api.github.com/graphql] using [:method, :uri]
    [Cassette: 'github_dependabot'] method (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
    [Cassette: 'github_dependabot'] uri (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
  [Cassette: 'github_dependabot'] Found matching interaction for [post https://api.github.com/graphql] at index 0: [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/Encryptor\",\"vulnerabilit"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://api.github.com/graphql]
[webmock] Handling request: [post https://api.github.com/graphql] (disabled: false)
  [Cassette: 'github_dependabot'] Checking if [post https://api.github.com/graphql] matches [post https://api.github.com/graphql] using [:method, :uri]
    [Cassette: 'github_dependabot'] method (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
    [Cassette: 'github_dependabot'] uri (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
  [Cassette: 'github_dependabot'] Found matching interaction for [post https://api.github.com/graphql] at index 0: [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/event_manager\",\"vulnerab"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://api.github.com/graphql]
[webmock] Handling request: [post https://api.github.com/graphql] (disabled: false)
  [Cassette: 'github_dependabot'] Checking if [post https://api.github.com/graphql] matches [post https://api.github.com/graphql] using [:method, :uri]
    [Cassette: 'github_dependabot'] method (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
    [Cassette: 'github_dependabot'] uri (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
  [Cassette: 'github_dependabot'] Found matching interaction for [post https://api.github.com/graphql] at index 0: [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/csv_parser\",\"vulnerabili"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://api.github.com/graphql]
[webmock] Handling request: [post https://api.github.com/graphql] (disabled: false)
  [Cassette: 'github_dependabot'] Checking if [post https://api.github.com/graphql] matches [post https://api.github.com/graphql] using [:method, :uri]
    [Cassette: 'github_dependabot'] method (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
    [Cassette: 'github_dependabot'] uri (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
  [Cassette: 'github_dependabot'] Found matching interaction for [post https://api.github.com/graphql] at index 0: [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/reverbdemo\",\"vulnerabili"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://api.github.com/graphql]
[webmock] Handling request: [post https://api.github.com/graphql] (disabled: false)
  [Cassette: 'github_dependabot'] Checking if [post https://api.github.com/graphql] matches [post https://api.github.com/graphql] using [:method, :uri]
    [Cassette: 'github_dependabot'] method (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
    [Cassette: 'github_dependabot'] uri (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
  [Cassette: 'github_dependabot'] Found matching interaction for [post https://api.github.com/graphql] at index 0: [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/Webdriver_Example\",\"vuln"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://api.github.com/graphql]
[webmock] Handling request: [post https://api.github.com/graphql] (disabled: false)
  [Cassette: 'github_dependabot'] Checking if [post https://api.github.com/graphql] matches [post https://api.github.com/graphql] using [:method, :uri]
    [Cassette: 'github_dependabot'] method (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
    [Cassette: 'github_dependabot'] uri (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
  [Cassette: 'github_dependabot'] Found matching interaction for [post https://api.github.com/graphql] at index 0: [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/javascript-quiz\",\"vulner"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://api.github.com/graphql]
[webmock] Handling request: [post https://api.github.com/graphql] (disabled: false)
  [Cassette: 'github_dependabot'] Checking if [post https://api.github.com/graphql] matches [post https://api.github.com/graphql] using [:method, :uri]
    [Cassette: 'github_dependabot'] method (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
    [Cassette: 'github_dependabot'] uri (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
  [Cassette: 'github_dependabot'] Found matching interaction for [post https://api.github.com/graphql] at index 0: [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/jquery-content-slider\",\""]
[webmock] Identified request type (stubbed_by_vcr) for [post https://api.github.com/graphql]
[webmock] Handling request: [post https://api.github.com/graphql] (disabled: false)
  [Cassette: 'github_dependabot'] Checking if [post https://api.github.com/graphql] matches [post https://api.github.com/graphql] using [:method, :uri]
    [Cassette: 'github_dependabot'] method (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
    [Cassette: 'github_dependabot'] uri (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
  [Cassette: 'github_dependabot'] Found matching interaction for [post https://api.github.com/graphql] at index 0: [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/todos\",\"vulnerabilityAle"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://api.github.com/graphql]
[webmock] Handling request: [post https://api.github.com/graphql] (disabled: false)
  [Cassette: 'github_dependabot'] Checking if [post https://api.github.com/graphql] matches [post https://api.github.com/graphql] using [:method, :uri]
    [Cassette: 'github_dependabot'] method (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
    [Cassette: 'github_dependabot'] uri (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
  [Cassette: 'github_dependabot'] Found matching interaction for [post https://api.github.com/graphql] at index 0: [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/pagerduty\",\"vulnerabilit"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://api.github.com/graphql]
[webmock] Handling request: [post https://api.github.com/graphql] (disabled: false)
  [Cassette: 'github_dependabot'] Checking if [post https://api.github.com/graphql] matches [post https://api.github.com/graphql] using [:method, :uri]
    [Cassette: 'github_dependabot'] method (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
    [Cassette: 'github_dependabot'] uri (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
  [Cassette: 'github_dependabot'] Found matching interaction for [post https://api.github.com/graphql] at index 0: [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/oratorlab\",\"vulnerabilit"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://api.github.com/graphql]
[webmock] Handling request: [post https://api.github.com/graphql] (disabled: false)
  [Cassette: 'github_dependabot'] Checking if [post https://api.github.com/graphql] matches [post https://api.github.com/graphql] using [:method, :uri]
    [Cassette: 'github_dependabot'] method (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
    [Cassette: 'github_dependabot'] uri (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
  [Cassette: 'github_dependabot'] Found matching interaction for [post https://api.github.com/graphql] at index 0: [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/sublime_settings\",\"vulne"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://api.github.com/graphql]
[webmock] Handling request: [post https://api.github.com/graphql] (disabled: false)
  [Cassette: 'github_dependabot'] Checking if [post https://api.github.com/graphql] matches [post https://api.github.com/graphql] using [:method, :uri]
    [Cassette: 'github_dependabot'] method (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
    [Cassette: 'github_dependabot'] uri (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
  [Cassette: 'github_dependabot'] Found matching interaction for [post https://api.github.com/graphql] at index 0: [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/DailyCodingProblems\",\"vu"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://api.github.com/graphql]
[webmock] Handling request: [post https://api.github.com/graphql] (disabled: false)
  [Cassette: 'github_dependabot'] Checking if [post https://api.github.com/graphql] matches [post https://api.github.com/graphql] using [:method, :uri]
    [Cassette: 'github_dependabot'] method (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
    [Cassette: 'github_dependabot'] uri (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
  [Cassette: 'github_dependabot'] Found matching interaction for [post https://api.github.com/graphql] at index 0: [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/tmux\",\"vulnerabilityAler"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://api.github.com/graphql]
[webmock] Handling request: [post https://api.github.com/graphql] (disabled: false)
  [Cassette: 'github_dependabot'] Checking if [post https://api.github.com/graphql] matches [post https://api.github.com/graphql] using [:method, :uri]
    [Cassette: 'github_dependabot'] method (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
    [Cassette: 'github_dependabot'] uri (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
  [Cassette: 'github_dependabot'] Found matching interaction for [post https://api.github.com/graphql] at index 0: [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/HTB-Notes-Private\",\"vuln"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://api.github.com/graphql]
[webmock] Handling request: [post https://api.github.com/graphql] (disabled: false)
  [Cassette: 'github_dependabot'] Checking if [post https://api.github.com/graphql] matches [post https://api.github.com/graphql] using [:method, :uri]
    [Cassette: 'github_dependabot'] method (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
    [Cassette: 'github_dependabot'] uri (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
  [Cassette: 'github_dependabot'] Found matching interaction for [post https://api.github.com/graphql] at index 0: [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/Hack-The-Box-Walkthrough"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://api.github.com/graphql]
[webmock] Handling request: [post https://api.github.com/graphql] (disabled: false)
  [Cassette: 'github_dependabot'] Checking if [post https://api.github.com/graphql] matches [post https://api.github.com/graphql] using [:method, :uri]
    [Cassette: 'github_dependabot'] method (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
    [Cassette: 'github_dependabot'] uri (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
  [Cassette: 'github_dependabot'] Found matching interaction for [post https://api.github.com/graphql] at index 0: [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/Pentesting-Scripts\",\"vul"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://api.github.com/graphql]
[webmock] Handling request: [post https://api.github.com/graphql] (disabled: false)
  [Cassette: 'github_dependabot'] Checking if [post https://api.github.com/graphql] matches [post https://api.github.com/graphql] using [:method, :uri]
    [Cassette: 'github_dependabot'] method (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
    [Cassette: 'github_dependabot'] uri (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
  [Cassette: 'github_dependabot'] Found matching interaction for [post https://api.github.com/graphql] at index 0: [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/ftp-user-enum\",\"vulnerab"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://api.github.com/graphql]
[webmock] Handling request: [post https://api.github.com/graphql] (disabled: false)
  [Cassette: 'github_dependabot'] Checking if [post https://api.github.com/graphql] matches [post https://api.github.com/graphql] using [:method, :uri]
    [Cassette: 'github_dependabot'] method (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
    [Cassette: 'github_dependabot'] uri (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
  [Cassette: 'github_dependabot'] Found matching interaction for [post https://api.github.com/graphql] at index 0: [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/Rspec-Capybara-Automatio"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://api.github.com/graphql]
[webmock] Handling request: [post https://api.github.com/graphql] (disabled: false)
  [Cassette: 'github_dependabot'] Checking if [post https://api.github.com/graphql] matches [post https://api.github.com/graphql] using [:method, :uri]
    [Cassette: 'github_dependabot'] method (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
    [Cassette: 'github_dependabot'] uri (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
  [Cassette: 'github_dependabot'] Found matching interaction for [post https://api.github.com/graphql] at index 0: [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/advent_of_code_2020\",\"vu"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://api.github.com/graphql]
[Cassette: 'github_dependabot'] Initialized with options: {:record=>:once, :record_on_error=>true, :match_requests_on=>[:method, :uri], :allow_unused_http_interactions=>true, :serialize_with=>:yaml, :persist_with=>:file_system, :persister_options=>{}}
[webmock] Handling request: [get http://169.254.169.254/latest/metadata/] (disabled: false)
[webmock] Identified request type (externally_stubbed) for [get http://169.254.169.254/latest/metadata/]
[webmock] Handling request: [get http://169.254.169.254/latest/metadata/] (disabled: false)
[webmock] Identified request type (externally_stubbed) for [get http://169.254.169.254/latest/metadata/]
[webmock] Handling request: [post https://api.github.com/graphql] (disabled: false)
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
  [Cassette: 'github_dependabot'] Initialized HTTPInteractionList with request matchers [:method, :uri] and 23 interaction(s): { [post https://api.github.com/graphql] => [200 "{\"data\":{\"repositoryOwner\":{\"repositories\":{\"nodes\":[{\"name\":\"sjh\"},{\"name\":\"scr"], [post https://api.github.com/graphql] => [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/sjh\",\"vulnerabilityAlert"], [post https://api.github.com/graphql] => [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/scripts\",\"vulnerabilityA"], [post https://api.github.com/graphql] => [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/simple_services_monitor\""], [post https://api.github.com/graphql] => [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/Encryptor\",\"vulnerabilit"], [post https://api.github.com/graphql] => [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/event_manager\",\"vulnerab"], [post https://api.github.com/graphql] => [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/csv_parser\",\"vulnerabili"], [post https://api.github.com/graphql] => [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/reverbdemo\",\"vulnerabili"], [post https://api.github.com/graphql] => [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/Webdriver_Example\",\"vuln"], [post https://api.github.com/graphql] => [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/javascript-quiz\",\"vulner"], [post https://api.github.com/graphql] => [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/jquery-content-slider\",\""], [post https://api.github.com/graphql] => [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/todos\",\"vulnerabilityAle"], [post https://api.github.com/graphql] => [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/pagerduty\",\"vulnerabilit"], [post https://api.github.com/graphql] => [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/oratorlab\",\"vulnerabilit"], [post https://api.github.com/graphql] => [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/sublime_settings\",\"vulne"], [post https://api.github.com/graphql] => [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/DailyCodingProblems\",\"vu"], [post https://api.github.com/graphql] => [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/tmux\",\"vulnerabilityAler"], [post https://api.github.com/graphql] => [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/HTB-Notes-Private\",\"vuln"], [post https://api.github.com/graphql] => [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/Hack-The-Box-Walkthrough"], [post https://api.github.com/graphql] => [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/Pentesting-Scripts\",\"vul"], [post https://api.github.com/graphql] => [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/ftp-user-enum\",\"vulnerab"], [post https://api.github.com/graphql] => [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/Rspec-Capybara-Automatio"], [post https://api.github.com/graphql] => [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/advent_of_code_2020\",\"vu"] }
  [Cassette: 'github_dependabot'] Checking if [post https://api.github.com/graphql] matches [post https://api.github.com/graphql] using [:method, :uri]
    [Cassette: 'github_dependabot'] method (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
    [Cassette: 'github_dependabot'] uri (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
  [Cassette: 'github_dependabot'] Found matching interaction for [post https://api.github.com/graphql] at index 0: [200 "{\"data\":{\"repositoryOwner\":{\"repositories\":{\"nodes\":[{\"name\":\"sjh\"},{\"name\":\"scr"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://api.github.com/graphql]
[webmock] Handling request: [post https://api.github.com/graphql] (disabled: false)
  [Cassette: 'github_dependabot'] Checking if [post https://api.github.com/graphql] matches [post https://api.github.com/graphql] using [:method, :uri]
    [Cassette: 'github_dependabot'] method (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
    [Cassette: 'github_dependabot'] uri (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
  [Cassette: 'github_dependabot'] Found matching interaction for [post https://api.github.com/graphql] at index 0: [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/sjh\",\"vulnerabilityAlert"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://api.github.com/graphql]
[webmock] Handling request: [post https://api.github.com/graphql] (disabled: false)
  [Cassette: 'github_dependabot'] Checking if [post https://api.github.com/graphql] matches [post https://api.github.com/graphql] using [:method, :uri]
    [Cassette: 'github_dependabot'] method (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
    [Cassette: 'github_dependabot'] uri (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
  [Cassette: 'github_dependabot'] Found matching interaction for [post https://api.github.com/graphql] at index 0: [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/scripts\",\"vulnerabilityA"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://api.github.com/graphql]
[webmock] Handling request: [post https://api.github.com/graphql] (disabled: false)
  [Cassette: 'github_dependabot'] Checking if [post https://api.github.com/graphql] matches [post https://api.github.com/graphql] using [:method, :uri]
    [Cassette: 'github_dependabot'] method (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
    [Cassette: 'github_dependabot'] uri (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
  [Cassette: 'github_dependabot'] Found matching interaction for [post https://api.github.com/graphql] at index 0: [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/simple_services_monitor\""]
[webmock] Identified request type (stubbed_by_vcr) for [post https://api.github.com/graphql]
[webmock] Handling request: [post https://api.github.com/graphql] (disabled: false)
  [Cassette: 'github_dependabot'] Checking if [post https://api.github.com/graphql] matches [post https://api.github.com/graphql] using [:method, :uri]
    [Cassette: 'github_dependabot'] method (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
    [Cassette: 'github_dependabot'] uri (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
  [Cassette: 'github_dependabot'] Found matching interaction for [post https://api.github.com/graphql] at index 0: [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/Encryptor\",\"vulnerabilit"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://api.github.com/graphql]
[webmock] Handling request: [post https://api.github.com/graphql] (disabled: false)
  [Cassette: 'github_dependabot'] Checking if [post https://api.github.com/graphql] matches [post https://api.github.com/graphql] using [:method, :uri]
    [Cassette: 'github_dependabot'] method (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
    [Cassette: 'github_dependabot'] uri (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
  [Cassette: 'github_dependabot'] Found matching interaction for [post https://api.github.com/graphql] at index 0: [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/event_manager\",\"vulnerab"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://api.github.com/graphql]
[webmock] Handling request: [post https://api.github.com/graphql] (disabled: false)
  [Cassette: 'github_dependabot'] Checking if [post https://api.github.com/graphql] matches [post https://api.github.com/graphql] using [:method, :uri]
    [Cassette: 'github_dependabot'] method (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
    [Cassette: 'github_dependabot'] uri (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
  [Cassette: 'github_dependabot'] Found matching interaction for [post https://api.github.com/graphql] at index 0: [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/csv_parser\",\"vulnerabili"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://api.github.com/graphql]
[webmock] Handling request: [post https://api.github.com/graphql] (disabled: false)
  [Cassette: 'github_dependabot'] Checking if [post https://api.github.com/graphql] matches [post https://api.github.com/graphql] using [:method, :uri]
    [Cassette: 'github_dependabot'] method (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
    [Cassette: 'github_dependabot'] uri (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
  [Cassette: 'github_dependabot'] Found matching interaction for [post https://api.github.com/graphql] at index 0: [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/reverbdemo\",\"vulnerabili"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://api.github.com/graphql]
[webmock] Handling request: [post https://api.github.com/graphql] (disabled: false)
  [Cassette: 'github_dependabot'] Checking if [post https://api.github.com/graphql] matches [post https://api.github.com/graphql] using [:method, :uri]
    [Cassette: 'github_dependabot'] method (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
    [Cassette: 'github_dependabot'] uri (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
  [Cassette: 'github_dependabot'] Found matching interaction for [post https://api.github.com/graphql] at index 0: [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/Webdriver_Example\",\"vuln"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://api.github.com/graphql]
[webmock] Handling request: [post https://api.github.com/graphql] (disabled: false)
  [Cassette: 'github_dependabot'] Checking if [post https://api.github.com/graphql] matches [post https://api.github.com/graphql] using [:method, :uri]
    [Cassette: 'github_dependabot'] method (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
    [Cassette: 'github_dependabot'] uri (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
  [Cassette: 'github_dependabot'] Found matching interaction for [post https://api.github.com/graphql] at index 0: [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/javascript-quiz\",\"vulner"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://api.github.com/graphql]
[webmock] Handling request: [post https://api.github.com/graphql] (disabled: false)
  [Cassette: 'github_dependabot'] Checking if [post https://api.github.com/graphql] matches [post https://api.github.com/graphql] using [:method, :uri]
    [Cassette: 'github_dependabot'] method (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
    [Cassette: 'github_dependabot'] uri (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
  [Cassette: 'github_dependabot'] Found matching interaction for [post https://api.github.com/graphql] at index 0: [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/jquery-content-slider\",\""]
[webmock] Identified request type (stubbed_by_vcr) for [post https://api.github.com/graphql]
[webmock] Handling request: [post https://api.github.com/graphql] (disabled: false)
  [Cassette: 'github_dependabot'] Checking if [post https://api.github.com/graphql] matches [post https://api.github.com/graphql] using [:method, :uri]
    [Cassette: 'github_dependabot'] method (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
    [Cassette: 'github_dependabot'] uri (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
  [Cassette: 'github_dependabot'] Found matching interaction for [post https://api.github.com/graphql] at index 0: [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/todos\",\"vulnerabilityAle"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://api.github.com/graphql]
[webmock] Handling request: [post https://api.github.com/graphql] (disabled: false)
  [Cassette: 'github_dependabot'] Checking if [post https://api.github.com/graphql] matches [post https://api.github.com/graphql] using [:method, :uri]
    [Cassette: 'github_dependabot'] method (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
    [Cassette: 'github_dependabot'] uri (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
  [Cassette: 'github_dependabot'] Found matching interaction for [post https://api.github.com/graphql] at index 0: [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/pagerduty\",\"vulnerabilit"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://api.github.com/graphql]
[webmock] Handling request: [post https://api.github.com/graphql] (disabled: false)
  [Cassette: 'github_dependabot'] Checking if [post https://api.github.com/graphql] matches [post https://api.github.com/graphql] using [:method, :uri]
    [Cassette: 'github_dependabot'] method (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
    [Cassette: 'github_dependabot'] uri (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
  [Cassette: 'github_dependabot'] Found matching interaction for [post https://api.github.com/graphql] at index 0: [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/oratorlab\",\"vulnerabilit"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://api.github.com/graphql]
[webmock] Handling request: [post https://api.github.com/graphql] (disabled: false)
  [Cassette: 'github_dependabot'] Checking if [post https://api.github.com/graphql] matches [post https://api.github.com/graphql] using [:method, :uri]
    [Cassette: 'github_dependabot'] method (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
    [Cassette: 'github_dependabot'] uri (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
  [Cassette: 'github_dependabot'] Found matching interaction for [post https://api.github.com/graphql] at index 0: [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/sublime_settings\",\"vulne"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://api.github.com/graphql]
[webmock] Handling request: [post https://api.github.com/graphql] (disabled: false)
  [Cassette: 'github_dependabot'] Checking if [post https://api.github.com/graphql] matches [post https://api.github.com/graphql] using [:method, :uri]
    [Cassette: 'github_dependabot'] method (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
    [Cassette: 'github_dependabot'] uri (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
  [Cassette: 'github_dependabot'] Found matching interaction for [post https://api.github.com/graphql] at index 0: [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/DailyCodingProblems\",\"vu"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://api.github.com/graphql]
[webmock] Handling request: [post https://api.github.com/graphql] (disabled: false)
  [Cassette: 'github_dependabot'] Checking if [post https://api.github.com/graphql] matches [post https://api.github.com/graphql] using [:method, :uri]
    [Cassette: 'github_dependabot'] method (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
    [Cassette: 'github_dependabot'] uri (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
  [Cassette: 'github_dependabot'] Found matching interaction for [post https://api.github.com/graphql] at index 0: [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/tmux\",\"vulnerabilityAler"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://api.github.com/graphql]
[webmock] Handling request: [post https://api.github.com/graphql] (disabled: false)
  [Cassette: 'github_dependabot'] Checking if [post https://api.github.com/graphql] matches [post https://api.github.com/graphql] using [:method, :uri]
    [Cassette: 'github_dependabot'] method (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
    [Cassette: 'github_dependabot'] uri (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
  [Cassette: 'github_dependabot'] Found matching interaction for [post https://api.github.com/graphql] at index 0: [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/HTB-Notes-Private\",\"vuln"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://api.github.com/graphql]
[webmock] Handling request: [post https://api.github.com/graphql] (disabled: false)
  [Cassette: 'github_dependabot'] Checking if [post https://api.github.com/graphql] matches [post https://api.github.com/graphql] using [:method, :uri]
    [Cassette: 'github_dependabot'] method (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
    [Cassette: 'github_dependabot'] uri (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
  [Cassette: 'github_dependabot'] Found matching interaction for [post https://api.github.com/graphql] at index 0: [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/Hack-The-Box-Walkthrough"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://api.github.com/graphql]
[webmock] Handling request: [post https://api.github.com/graphql] (disabled: false)
  [Cassette: 'github_dependabot'] Checking if [post https://api.github.com/graphql] matches [post https://api.github.com/graphql] using [:method, :uri]
    [Cassette: 'github_dependabot'] method (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
    [Cassette: 'github_dependabot'] uri (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
  [Cassette: 'github_dependabot'] Found matching interaction for [post https://api.github.com/graphql] at index 0: [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/Pentesting-Scripts\",\"vul"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://api.github.com/graphql]
[webmock] Handling request: [post https://api.github.com/graphql] (disabled: false)
  [Cassette: 'github_dependabot'] Checking if [post https://api.github.com/graphql] matches [post https://api.github.com/graphql] using [:method, :uri]
    [Cassette: 'github_dependabot'] method (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
    [Cassette: 'github_dependabot'] uri (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
  [Cassette: 'github_dependabot'] Found matching interaction for [post https://api.github.com/graphql] at index 0: [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/ftp-user-enum\",\"vulnerab"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://api.github.com/graphql]
[webmock] Handling request: [post https://api.github.com/graphql] (disabled: false)
  [Cassette: 'github_dependabot'] Checking if [post https://api.github.com/graphql] matches [post https://api.github.com/graphql] using [:method, :uri]
    [Cassette: 'github_dependabot'] method (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
    [Cassette: 'github_dependabot'] uri (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
  [Cassette: 'github_dependabot'] Found matching interaction for [post https://api.github.com/graphql] at index 0: [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/Rspec-Capybara-Automatio"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://api.github.com/graphql]
[webmock] Handling request: [post https://api.github.com/graphql] (disabled: false)
  [Cassette: 'github_dependabot'] Checking if [post https://api.github.com/graphql] matches [post https://api.github.com/graphql] using [:method, :uri]
    [Cassette: 'github_dependabot'] method (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
    [Cassette: 'github_dependabot'] uri (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
  [Cassette: 'github_dependabot'] Found matching interaction for [post https://api.github.com/graphql] at index 0: [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/advent_of_code_2020\",\"vu"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://api.github.com/graphql]
[Cassette: 'github_dependabot'] Initialized with options: {:record=>:once, :record_on_error=>true, :match_requests_on=>[:method, :uri], :allow_unused_http_interactions=>true, :serialize_with=>:yaml, :persist_with=>:file_system, :persister_options=>{}}
[webmock] Handling request: [get http://169.254.169.254/latest/metadata/] (disabled: false)
[webmock] Identified request type (externally_stubbed) for [get http://169.254.169.254/latest/metadata/]
[webmock] Handling request: [get http://169.254.169.254/latest/metadata/] (disabled: false)
[webmock] Identified request type (externally_stubbed) for [get http://169.254.169.254/latest/metadata/]
[webmock] Handling request: [post https://api.github.com/graphql] (disabled: false)
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
  [Cassette: 'github_dependabot'] Initialized HTTPInteractionList with request matchers [:method, :uri] and 23 interaction(s): { [post https://api.github.com/graphql] => [200 "{\"data\":{\"repositoryOwner\":{\"repositories\":{\"nodes\":[{\"name\":\"sjh\"},{\"name\":\"scr"], [post https://api.github.com/graphql] => [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/sjh\",\"vulnerabilityAlert"], [post https://api.github.com/graphql] => [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/scripts\",\"vulnerabilityA"], [post https://api.github.com/graphql] => [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/simple_services_monitor\""], [post https://api.github.com/graphql] => [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/Encryptor\",\"vulnerabilit"], [post https://api.github.com/graphql] => [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/event_manager\",\"vulnerab"], [post https://api.github.com/graphql] => [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/csv_parser\",\"vulnerabili"], [post https://api.github.com/graphql] => [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/reverbdemo\",\"vulnerabili"], [post https://api.github.com/graphql] => [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/Webdriver_Example\",\"vuln"], [post https://api.github.com/graphql] => [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/javascript-quiz\",\"vulner"], [post https://api.github.com/graphql] => [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/jquery-content-slider\",\""], [post https://api.github.com/graphql] => [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/todos\",\"vulnerabilityAle"], [post https://api.github.com/graphql] => [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/pagerduty\",\"vulnerabilit"], [post https://api.github.com/graphql] => [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/oratorlab\",\"vulnerabilit"], [post https://api.github.com/graphql] => [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/sublime_settings\",\"vulne"], [post https://api.github.com/graphql] => [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/DailyCodingProblems\",\"vu"], [post https://api.github.com/graphql] => [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/tmux\",\"vulnerabilityAler"], [post https://api.github.com/graphql] => [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/HTB-Notes-Private\",\"vuln"], [post https://api.github.com/graphql] => [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/Hack-The-Box-Walkthrough"], [post https://api.github.com/graphql] => [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/Pentesting-Scripts\",\"vul"], [post https://api.github.com/graphql] => [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/ftp-user-enum\",\"vulnerab"], [post https://api.github.com/graphql] => [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/Rspec-Capybara-Automatio"], [post https://api.github.com/graphql] => [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/advent_of_code_2020\",\"vu"] }
  [Cassette: 'github_dependabot'] Checking if [post https://api.github.com/graphql] matches [post https://api.github.com/graphql] using [:method, :uri]
    [Cassette: 'github_dependabot'] method (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
    [Cassette: 'github_dependabot'] uri (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
  [Cassette: 'github_dependabot'] Found matching interaction for [post https://api.github.com/graphql] at index 0: [200 "{\"data\":{\"repositoryOwner\":{\"repositories\":{\"nodes\":[{\"name\":\"sjh\"},{\"name\":\"scr"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://api.github.com/graphql]
[webmock] Handling request: [post https://api.github.com/graphql] (disabled: false)
  [Cassette: 'github_dependabot'] Checking if [post https://api.github.com/graphql] matches [post https://api.github.com/graphql] using [:method, :uri]
    [Cassette: 'github_dependabot'] method (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
    [Cassette: 'github_dependabot'] uri (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
  [Cassette: 'github_dependabot'] Found matching interaction for [post https://api.github.com/graphql] at index 0: [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/sjh\",\"vulnerabilityAlert"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://api.github.com/graphql]
[webmock] Handling request: [post https://api.github.com/graphql] (disabled: false)
  [Cassette: 'github_dependabot'] Checking if [post https://api.github.com/graphql] matches [post https://api.github.com/graphql] using [:method, :uri]
    [Cassette: 'github_dependabot'] method (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
    [Cassette: 'github_dependabot'] uri (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
  [Cassette: 'github_dependabot'] Found matching interaction for [post https://api.github.com/graphql] at index 0: [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/scripts\",\"vulnerabilityA"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://api.github.com/graphql]
[webmock] Handling request: [post https://api.github.com/graphql] (disabled: false)
  [Cassette: 'github_dependabot'] Checking if [post https://api.github.com/graphql] matches [post https://api.github.com/graphql] using [:method, :uri]
    [Cassette: 'github_dependabot'] method (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
    [Cassette: 'github_dependabot'] uri (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
  [Cassette: 'github_dependabot'] Found matching interaction for [post https://api.github.com/graphql] at index 0: [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/simple_services_monitor\""]
[webmock] Identified request type (stubbed_by_vcr) for [post https://api.github.com/graphql]
[webmock] Handling request: [post https://api.github.com/graphql] (disabled: false)
  [Cassette: 'github_dependabot'] Checking if [post https://api.github.com/graphql] matches [post https://api.github.com/graphql] using [:method, :uri]
    [Cassette: 'github_dependabot'] method (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
    [Cassette: 'github_dependabot'] uri (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
  [Cassette: 'github_dependabot'] Found matching interaction for [post https://api.github.com/graphql] at index 0: [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/Encryptor\",\"vulnerabilit"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://api.github.com/graphql]
[webmock] Handling request: [post https://api.github.com/graphql] (disabled: false)
  [Cassette: 'github_dependabot'] Checking if [post https://api.github.com/graphql] matches [post https://api.github.com/graphql] using [:method, :uri]
    [Cassette: 'github_dependabot'] method (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
    [Cassette: 'github_dependabot'] uri (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
  [Cassette: 'github_dependabot'] Found matching interaction for [post https://api.github.com/graphql] at index 0: [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/event_manager\",\"vulnerab"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://api.github.com/graphql]
[webmock] Handling request: [post https://api.github.com/graphql] (disabled: false)
  [Cassette: 'github_dependabot'] Checking if [post https://api.github.com/graphql] matches [post https://api.github.com/graphql] using [:method, :uri]
    [Cassette: 'github_dependabot'] method (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
    [Cassette: 'github_dependabot'] uri (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
  [Cassette: 'github_dependabot'] Found matching interaction for [post https://api.github.com/graphql] at index 0: [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/csv_parser\",\"vulnerabili"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://api.github.com/graphql]
[webmock] Handling request: [post https://api.github.com/graphql] (disabled: false)
  [Cassette: 'github_dependabot'] Checking if [post https://api.github.com/graphql] matches [post https://api.github.com/graphql] using [:method, :uri]
    [Cassette: 'github_dependabot'] method (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
    [Cassette: 'github_dependabot'] uri (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
  [Cassette: 'github_dependabot'] Found matching interaction for [post https://api.github.com/graphql] at index 0: [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/reverbdemo\",\"vulnerabili"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://api.github.com/graphql]
[webmock] Handling request: [post https://api.github.com/graphql] (disabled: false)
  [Cassette: 'github_dependabot'] Checking if [post https://api.github.com/graphql] matches [post https://api.github.com/graphql] using [:method, :uri]
    [Cassette: 'github_dependabot'] method (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
    [Cassette: 'github_dependabot'] uri (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
  [Cassette: 'github_dependabot'] Found matching interaction for [post https://api.github.com/graphql] at index 0: [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/Webdriver_Example\",\"vuln"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://api.github.com/graphql]
[webmock] Handling request: [post https://api.github.com/graphql] (disabled: false)
  [Cassette: 'github_dependabot'] Checking if [post https://api.github.com/graphql] matches [post https://api.github.com/graphql] using [:method, :uri]
    [Cassette: 'github_dependabot'] method (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
    [Cassette: 'github_dependabot'] uri (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
  [Cassette: 'github_dependabot'] Found matching interaction for [post https://api.github.com/graphql] at index 0: [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/javascript-quiz\",\"vulner"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://api.github.com/graphql]
[webmock] Handling request: [post https://api.github.com/graphql] (disabled: false)
  [Cassette: 'github_dependabot'] Checking if [post https://api.github.com/graphql] matches [post https://api.github.com/graphql] using [:method, :uri]
    [Cassette: 'github_dependabot'] method (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
    [Cassette: 'github_dependabot'] uri (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
  [Cassette: 'github_dependabot'] Found matching interaction for [post https://api.github.com/graphql] at index 0: [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/jquery-content-slider\",\""]
[webmock] Identified request type (stubbed_by_vcr) for [post https://api.github.com/graphql]
[webmock] Handling request: [post https://api.github.com/graphql] (disabled: false)
  [Cassette: 'github_dependabot'] Checking if [post https://api.github.com/graphql] matches [post https://api.github.com/graphql] using [:method, :uri]
    [Cassette: 'github_dependabot'] method (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
    [Cassette: 'github_dependabot'] uri (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
  [Cassette: 'github_dependabot'] Found matching interaction for [post https://api.github.com/graphql] at index 0: [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/todos\",\"vulnerabilityAle"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://api.github.com/graphql]
[webmock] Handling request: [post https://api.github.com/graphql] (disabled: false)
  [Cassette: 'github_dependabot'] Checking if [post https://api.github.com/graphql] matches [post https://api.github.com/graphql] using [:method, :uri]
    [Cassette: 'github_dependabot'] method (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
    [Cassette: 'github_dependabot'] uri (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
  [Cassette: 'github_dependabot'] Found matching interaction for [post https://api.github.com/graphql] at index 0: [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/pagerduty\",\"vulnerabilit"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://api.github.com/graphql]
[webmock] Handling request: [post https://api.github.com/graphql] (disabled: false)
  [Cassette: 'github_dependabot'] Checking if [post https://api.github.com/graphql] matches [post https://api.github.com/graphql] using [:method, :uri]
    [Cassette: 'github_dependabot'] method (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
    [Cassette: 'github_dependabot'] uri (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
  [Cassette: 'github_dependabot'] Found matching interaction for [post https://api.github.com/graphql] at index 0: [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/oratorlab\",\"vulnerabilit"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://api.github.com/graphql]
[webmock] Handling request: [post https://api.github.com/graphql] (disabled: false)
  [Cassette: 'github_dependabot'] Checking if [post https://api.github.com/graphql] matches [post https://api.github.com/graphql] using [:method, :uri]
    [Cassette: 'github_dependabot'] method (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
    [Cassette: 'github_dependabot'] uri (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
  [Cassette: 'github_dependabot'] Found matching interaction for [post https://api.github.com/graphql] at index 0: [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/sublime_settings\",\"vulne"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://api.github.com/graphql]
[webmock] Handling request: [post https://api.github.com/graphql] (disabled: false)
  [Cassette: 'github_dependabot'] Checking if [post https://api.github.com/graphql] matches [post https://api.github.com/graphql] using [:method, :uri]
    [Cassette: 'github_dependabot'] method (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
    [Cassette: 'github_dependabot'] uri (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
  [Cassette: 'github_dependabot'] Found matching interaction for [post https://api.github.com/graphql] at index 0: [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/DailyCodingProblems\",\"vu"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://api.github.com/graphql]
[webmock] Handling request: [post https://api.github.com/graphql] (disabled: false)
  [Cassette: 'github_dependabot'] Checking if [post https://api.github.com/graphql] matches [post https://api.github.com/graphql] using [:method, :uri]
    [Cassette: 'github_dependabot'] method (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
    [Cassette: 'github_dependabot'] uri (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
  [Cassette: 'github_dependabot'] Found matching interaction for [post https://api.github.com/graphql] at index 0: [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/tmux\",\"vulnerabilityAler"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://api.github.com/graphql]
[webmock] Handling request: [post https://api.github.com/graphql] (disabled: false)
  [Cassette: 'github_dependabot'] Checking if [post https://api.github.com/graphql] matches [post https://api.github.com/graphql] using [:method, :uri]
    [Cassette: 'github_dependabot'] method (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
    [Cassette: 'github_dependabot'] uri (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
  [Cassette: 'github_dependabot'] Found matching interaction for [post https://api.github.com/graphql] at index 0: [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/HTB-Notes-Private\",\"vuln"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://api.github.com/graphql]
[webmock] Handling request: [post https://api.github.com/graphql] (disabled: false)
  [Cassette: 'github_dependabot'] Checking if [post https://api.github.com/graphql] matches [post https://api.github.com/graphql] using [:method, :uri]
    [Cassette: 'github_dependabot'] method (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
    [Cassette: 'github_dependabot'] uri (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
  [Cassette: 'github_dependabot'] Found matching interaction for [post https://api.github.com/graphql] at index 0: [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/Hack-The-Box-Walkthrough"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://api.github.com/graphql]
[webmock] Handling request: [post https://api.github.com/graphql] (disabled: false)
  [Cassette: 'github_dependabot'] Checking if [post https://api.github.com/graphql] matches [post https://api.github.com/graphql] using [:method, :uri]
    [Cassette: 'github_dependabot'] method (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
    [Cassette: 'github_dependabot'] uri (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
  [Cassette: 'github_dependabot'] Found matching interaction for [post https://api.github.com/graphql] at index 0: [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/Pentesting-Scripts\",\"vul"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://api.github.com/graphql]
[webmock] Handling request: [post https://api.github.com/graphql] (disabled: false)
  [Cassette: 'github_dependabot'] Checking if [post https://api.github.com/graphql] matches [post https://api.github.com/graphql] using [:method, :uri]
    [Cassette: 'github_dependabot'] method (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
    [Cassette: 'github_dependabot'] uri (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
  [Cassette: 'github_dependabot'] Found matching interaction for [post https://api.github.com/graphql] at index 0: [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/ftp-user-enum\",\"vulnerab"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://api.github.com/graphql]
[webmock] Handling request: [post https://api.github.com/graphql] (disabled: false)
  [Cassette: 'github_dependabot'] Checking if [post https://api.github.com/graphql] matches [post https://api.github.com/graphql] using [:method, :uri]
    [Cassette: 'github_dependabot'] method (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
    [Cassette: 'github_dependabot'] uri (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
  [Cassette: 'github_dependabot'] Found matching interaction for [post https://api.github.com/graphql] at index 0: [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/Rspec-Capybara-Automatio"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://api.github.com/graphql]
[webmock] Handling request: [post https://api.github.com/graphql] (disabled: false)
  [Cassette: 'github_dependabot'] Checking if [post https://api.github.com/graphql] matches [post https://api.github.com/graphql] using [:method, :uri]
    [Cassette: 'github_dependabot'] method (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
    [Cassette: 'github_dependabot'] uri (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
  [Cassette: 'github_dependabot'] Found matching interaction for [post https://api.github.com/graphql] at index 0: [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/advent_of_code_2020\",\"vu"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://api.github.com/graphql]
[Cassette: 'github_dependabot'] Initialized with options: {:record=>:once, :record_on_error=>true, :match_requests_on=>[:method, :uri], :allow_unused_http_interactions=>true, :serialize_with=>:yaml, :persist_with=>:file_system, :persister_options=>{}}
[webmock] Handling request: [get http://169.254.169.254/latest/metadata/] (disabled: false)
[webmock] Identified request type (externally_stubbed) for [get http://169.254.169.254/latest/metadata/]
[webmock] Handling request: [get http://169.254.169.254/latest/metadata/] (disabled: false)
[webmock] Identified request type (externally_stubbed) for [get http://169.254.169.254/latest/metadata/]
[webmock] Handling request: [post https://api.github.com/graphql] (disabled: false)
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
  [Cassette: 'github_dependabot'] Initialized HTTPInteractionList with request matchers [:method, :uri] and 23 interaction(s): { [post https://api.github.com/graphql] => [200 "{\"data\":{\"repositoryOwner\":{\"repositories\":{\"nodes\":[{\"name\":\"sjh\"},{\"name\":\"scr"], [post https://api.github.com/graphql] => [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/sjh\",\"vulnerabilityAlert"], [post https://api.github.com/graphql] => [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/scripts\",\"vulnerabilityA"], [post https://api.github.com/graphql] => [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/simple_services_monitor\""], [post https://api.github.com/graphql] => [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/Encryptor\",\"vulnerabilit"], [post https://api.github.com/graphql] => [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/event_manager\",\"vulnerab"], [post https://api.github.com/graphql] => [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/csv_parser\",\"vulnerabili"], [post https://api.github.com/graphql] => [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/reverbdemo\",\"vulnerabili"], [post https://api.github.com/graphql] => [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/Webdriver_Example\",\"vuln"], [post https://api.github.com/graphql] => [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/javascript-quiz\",\"vulner"], [post https://api.github.com/graphql] => [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/jquery-content-slider\",\""], [post https://api.github.com/graphql] => [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/todos\",\"vulnerabilityAle"], [post https://api.github.com/graphql] => [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/pagerduty\",\"vulnerabilit"], [post https://api.github.com/graphql] => [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/oratorlab\",\"vulnerabilit"], [post https://api.github.com/graphql] => [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/sublime_settings\",\"vulne"], [post https://api.github.com/graphql] => [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/DailyCodingProblems\",\"vu"], [post https://api.github.com/graphql] => [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/tmux\",\"vulnerabilityAler"], [post https://api.github.com/graphql] => [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/HTB-Notes-Private\",\"vuln"], [post https://api.github.com/graphql] => [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/Hack-The-Box-Walkthrough"], [post https://api.github.com/graphql] => [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/Pentesting-Scripts\",\"vul"], [post https://api.github.com/graphql] => [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/ftp-user-enum\",\"vulnerab"], [post https://api.github.com/graphql] => [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/Rspec-Capybara-Automatio"], [post https://api.github.com/graphql] => [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/advent_of_code_2020\",\"vu"] }
  [Cassette: 'github_dependabot'] Checking if [post https://api.github.com/graphql] matches [post https://api.github.com/graphql] using [:method, :uri]
    [Cassette: 'github_dependabot'] method (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
    [Cassette: 'github_dependabot'] uri (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
  [Cassette: 'github_dependabot'] Found matching interaction for [post https://api.github.com/graphql] at index 0: [200 "{\"data\":{\"repositoryOwner\":{\"repositories\":{\"nodes\":[{\"name\":\"sjh\"},{\"name\":\"scr"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://api.github.com/graphql]
[webmock] Handling request: [post https://api.github.com/graphql] (disabled: false)
  [Cassette: 'github_dependabot'] Checking if [post https://api.github.com/graphql] matches [post https://api.github.com/graphql] using [:method, :uri]
    [Cassette: 'github_dependabot'] method (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
    [Cassette: 'github_dependabot'] uri (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
  [Cassette: 'github_dependabot'] Found matching interaction for [post https://api.github.com/graphql] at index 0: [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/sjh\",\"vulnerabilityAlert"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://api.github.com/graphql]
[webmock] Handling request: [post https://api.github.com/graphql] (disabled: false)
  [Cassette: 'github_dependabot'] Checking if [post https://api.github.com/graphql] matches [post https://api.github.com/graphql] using [:method, :uri]
    [Cassette: 'github_dependabot'] method (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
    [Cassette: 'github_dependabot'] uri (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
  [Cassette: 'github_dependabot'] Found matching interaction for [post https://api.github.com/graphql] at index 0: [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/scripts\",\"vulnerabilityA"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://api.github.com/graphql]
[webmock] Handling request: [post https://api.github.com/graphql] (disabled: false)
  [Cassette: 'github_dependabot'] Checking if [post https://api.github.com/graphql] matches [post https://api.github.com/graphql] using [:method, :uri]
    [Cassette: 'github_dependabot'] method (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
    [Cassette: 'github_dependabot'] uri (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
  [Cassette: 'github_dependabot'] Found matching interaction for [post https://api.github.com/graphql] at index 0: [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/simple_services_monitor\""]
[webmock] Identified request type (stubbed_by_vcr) for [post https://api.github.com/graphql]
[webmock] Handling request: [post https://api.github.com/graphql] (disabled: false)
  [Cassette: 'github_dependabot'] Checking if [post https://api.github.com/graphql] matches [post https://api.github.com/graphql] using [:method, :uri]
    [Cassette: 'github_dependabot'] method (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
    [Cassette: 'github_dependabot'] uri (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
  [Cassette: 'github_dependabot'] Found matching interaction for [post https://api.github.com/graphql] at index 0: [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/Encryptor\",\"vulnerabilit"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://api.github.com/graphql]
[webmock] Handling request: [post https://api.github.com/graphql] (disabled: false)
  [Cassette: 'github_dependabot'] Checking if [post https://api.github.com/graphql] matches [post https://api.github.com/graphql] using [:method, :uri]
    [Cassette: 'github_dependabot'] method (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
    [Cassette: 'github_dependabot'] uri (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
  [Cassette: 'github_dependabot'] Found matching interaction for [post https://api.github.com/graphql] at index 0: [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/event_manager\",\"vulnerab"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://api.github.com/graphql]
[webmock] Handling request: [post https://api.github.com/graphql] (disabled: false)
  [Cassette: 'github_dependabot'] Checking if [post https://api.github.com/graphql] matches [post https://api.github.com/graphql] using [:method, :uri]
    [Cassette: 'github_dependabot'] method (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
    [Cassette: 'github_dependabot'] uri (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
  [Cassette: 'github_dependabot'] Found matching interaction for [post https://api.github.com/graphql] at index 0: [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/csv_parser\",\"vulnerabili"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://api.github.com/graphql]
[webmock] Handling request: [post https://api.github.com/graphql] (disabled: false)
  [Cassette: 'github_dependabot'] Checking if [post https://api.github.com/graphql] matches [post https://api.github.com/graphql] using [:method, :uri]
    [Cassette: 'github_dependabot'] method (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
    [Cassette: 'github_dependabot'] uri (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
  [Cassette: 'github_dependabot'] Found matching interaction for [post https://api.github.com/graphql] at index 0: [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/reverbdemo\",\"vulnerabili"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://api.github.com/graphql]
[webmock] Handling request: [post https://api.github.com/graphql] (disabled: false)
  [Cassette: 'github_dependabot'] Checking if [post https://api.github.com/graphql] matches [post https://api.github.com/graphql] using [:method, :uri]
    [Cassette: 'github_dependabot'] method (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
    [Cassette: 'github_dependabot'] uri (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
  [Cassette: 'github_dependabot'] Found matching interaction for [post https://api.github.com/graphql] at index 0: [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/Webdriver_Example\",\"vuln"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://api.github.com/graphql]
[webmock] Handling request: [post https://api.github.com/graphql] (disabled: false)
  [Cassette: 'github_dependabot'] Checking if [post https://api.github.com/graphql] matches [post https://api.github.com/graphql] using [:method, :uri]
    [Cassette: 'github_dependabot'] method (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
    [Cassette: 'github_dependabot'] uri (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
  [Cassette: 'github_dependabot'] Found matching interaction for [post https://api.github.com/graphql] at index 0: [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/javascript-quiz\",\"vulner"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://api.github.com/graphql]
[webmock] Handling request: [post https://api.github.com/graphql] (disabled: false)
  [Cassette: 'github_dependabot'] Checking if [post https://api.github.com/graphql] matches [post https://api.github.com/graphql] using [:method, :uri]
    [Cassette: 'github_dependabot'] method (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
    [Cassette: 'github_dependabot'] uri (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
  [Cassette: 'github_dependabot'] Found matching interaction for [post https://api.github.com/graphql] at index 0: [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/jquery-content-slider\",\""]
[webmock] Identified request type (stubbed_by_vcr) for [post https://api.github.com/graphql]
[webmock] Handling request: [post https://api.github.com/graphql] (disabled: false)
  [Cassette: 'github_dependabot'] Checking if [post https://api.github.com/graphql] matches [post https://api.github.com/graphql] using [:method, :uri]
    [Cassette: 'github_dependabot'] method (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
    [Cassette: 'github_dependabot'] uri (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
  [Cassette: 'github_dependabot'] Found matching interaction for [post https://api.github.com/graphql] at index 0: [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/todos\",\"vulnerabilityAle"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://api.github.com/graphql]
[webmock] Handling request: [post https://api.github.com/graphql] (disabled: false)
  [Cassette: 'github_dependabot'] Checking if [post https://api.github.com/graphql] matches [post https://api.github.com/graphql] using [:method, :uri]
    [Cassette: 'github_dependabot'] method (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
    [Cassette: 'github_dependabot'] uri (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
  [Cassette: 'github_dependabot'] Found matching interaction for [post https://api.github.com/graphql] at index 0: [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/pagerduty\",\"vulnerabilit"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://api.github.com/graphql]
[webmock] Handling request: [post https://api.github.com/graphql] (disabled: false)
  [Cassette: 'github_dependabot'] Checking if [post https://api.github.com/graphql] matches [post https://api.github.com/graphql] using [:method, :uri]
    [Cassette: 'github_dependabot'] method (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
    [Cassette: 'github_dependabot'] uri (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
  [Cassette: 'github_dependabot'] Found matching interaction for [post https://api.github.com/graphql] at index 0: [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/oratorlab\",\"vulnerabilit"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://api.github.com/graphql]
[webmock] Handling request: [post https://api.github.com/graphql] (disabled: false)
  [Cassette: 'github_dependabot'] Checking if [post https://api.github.com/graphql] matches [post https://api.github.com/graphql] using [:method, :uri]
    [Cassette: 'github_dependabot'] method (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
    [Cassette: 'github_dependabot'] uri (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
  [Cassette: 'github_dependabot'] Found matching interaction for [post https://api.github.com/graphql] at index 0: [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/sublime_settings\",\"vulne"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://api.github.com/graphql]
[webmock] Handling request: [post https://api.github.com/graphql] (disabled: false)
  [Cassette: 'github_dependabot'] Checking if [post https://api.github.com/graphql] matches [post https://api.github.com/graphql] using [:method, :uri]
    [Cassette: 'github_dependabot'] method (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
    [Cassette: 'github_dependabot'] uri (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
  [Cassette: 'github_dependabot'] Found matching interaction for [post https://api.github.com/graphql] at index 0: [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/DailyCodingProblems\",\"vu"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://api.github.com/graphql]
[webmock] Handling request: [post https://api.github.com/graphql] (disabled: false)
  [Cassette: 'github_dependabot'] Checking if [post https://api.github.com/graphql] matches [post https://api.github.com/graphql] using [:method, :uri]
    [Cassette: 'github_dependabot'] method (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
    [Cassette: 'github_dependabot'] uri (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
  [Cassette: 'github_dependabot'] Found matching interaction for [post https://api.github.com/graphql] at index 0: [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/tmux\",\"vulnerabilityAler"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://api.github.com/graphql]
[webmock] Handling request: [post https://api.github.com/graphql] (disabled: false)
  [Cassette: 'github_dependabot'] Checking if [post https://api.github.com/graphql] matches [post https://api.github.com/graphql] using [:method, :uri]
    [Cassette: 'github_dependabot'] method (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
    [Cassette: 'github_dependabot'] uri (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
  [Cassette: 'github_dependabot'] Found matching interaction for [post https://api.github.com/graphql] at index 0: [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/HTB-Notes-Private\",\"vuln"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://api.github.com/graphql]
[webmock] Handling request: [post https://api.github.com/graphql] (disabled: false)
  [Cassette: 'github_dependabot'] Checking if [post https://api.github.com/graphql] matches [post https://api.github.com/graphql] using [:method, :uri]
    [Cassette: 'github_dependabot'] method (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
    [Cassette: 'github_dependabot'] uri (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
  [Cassette: 'github_dependabot'] Found matching interaction for [post https://api.github.com/graphql] at index 0: [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/Hack-The-Box-Walkthrough"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://api.github.com/graphql]
[webmock] Handling request: [post https://api.github.com/graphql] (disabled: false)
  [Cassette: 'github_dependabot'] Checking if [post https://api.github.com/graphql] matches [post https://api.github.com/graphql] using [:method, :uri]
    [Cassette: 'github_dependabot'] method (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
    [Cassette: 'github_dependabot'] uri (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
  [Cassette: 'github_dependabot'] Found matching interaction for [post https://api.github.com/graphql] at index 0: [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/Pentesting-Scripts\",\"vul"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://api.github.com/graphql]
[webmock] Handling request: [post https://api.github.com/graphql] (disabled: false)
  [Cassette: 'github_dependabot'] Checking if [post https://api.github.com/graphql] matches [post https://api.github.com/graphql] using [:method, :uri]
    [Cassette: 'github_dependabot'] method (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
    [Cassette: 'github_dependabot'] uri (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
  [Cassette: 'github_dependabot'] Found matching interaction for [post https://api.github.com/graphql] at index 0: [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/ftp-user-enum\",\"vulnerab"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://api.github.com/graphql]
[webmock] Handling request: [post https://api.github.com/graphql] (disabled: false)
  [Cassette: 'github_dependabot'] Checking if [post https://api.github.com/graphql] matches [post https://api.github.com/graphql] using [:method, :uri]
    [Cassette: 'github_dependabot'] method (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
    [Cassette: 'github_dependabot'] uri (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
  [Cassette: 'github_dependabot'] Found matching interaction for [post https://api.github.com/graphql] at index 0: [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/Rspec-Capybara-Automatio"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://api.github.com/graphql]
[webmock] Handling request: [post https://api.github.com/graphql] (disabled: false)
  [Cassette: 'github_dependabot'] Checking if [post https://api.github.com/graphql] matches [post https://api.github.com/graphql] using [:method, :uri]
    [Cassette: 'github_dependabot'] method (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
    [Cassette: 'github_dependabot'] uri (matched): current request [post https://api.github.com/graphql] vs [post https://api.github.com/graphql]
  [Cassette: 'github_dependabot'] Found matching interaction for [post https://api.github.com/graphql] at index 0: [200 "{\"data\":{\"repository\":{\"url\":\"https://github.com/shotop/advent_of_code_2020\",\"vu"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://api.github.com/graphql]
[webmock] Handling request: [get http://169.254.169.254/latest/metadata/] (disabled: false)
[webmock] Identified request type (externally_stubbed) for [get http://169.254.169.254/latest/metadata/]
[Cassette: 'snyk_v2_task_run'] Initialized with options: {:record=>:once, :record_on_error=>true, :match_requests_on=>[:method, :uri], :allow_unused_http_interactions=>true, :serialize_with=>:yaml, :persist_with=>:file_system, :persister_options=>{}}
[webmock] Handling request: [get http://169.254.169.254/latest/metadata/] (disabled: false)
[webmock] Identified request type (externally_stubbed) for [get http://169.254.169.254/latest/metadata/]
[webmock] Handling request: [get http://169.254.169.254/latest/metadata/] (disabled: false)
[webmock] Identified request type (externally_stubbed) for [get http://169.254.169.254/latest/metadata/]
[webmock] Handling request: [get https://api.eu.snyk.io/rest/orgs?version=2024-04-29] (disabled: false)
[webmock] Identified request type (externally_stubbed) for [get https://api.eu.snyk.io/rest/orgs?version=2024-04-29]
[webmock] Handling request: [get https://api.eu.snyk.io/rest/orgs/abcd1234-5678-90ef-ghij-klmnopqrstuv/projects?limit=100&version=2024-04-29] (disabled: false)
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
  [Cassette: 'snyk_v2_task_run'] Initialized HTTPInteractionList with request matchers [:method, :uri] and 2 interaction(s): { [get https://api.eu.snyk.io/rest/orgs/abcd1234-5678-90ef-ghij-klmnopqrstuv/projects?limit=100&version=2024-04-29] => [200 "{\"jsonapi\":{\"version\":\"1.0\"},\"data\":[{\"type\":\"project\",\"id\":\"abcd5678-1234-efgh-"], [get https://api.eu.snyk.io/rest/orgs/abcd1234-5678-90ef-ghij-klmnopqrstuv/issues?created_after=2024-07-14T00:00:00Z&created_before=2024-08-13T00:00:00Z&limit=10&version=2024-04-29] => [200 "{\"jsonapi\":{\"version\":\"1.0\"},\"links\":{\"self\":\"/rest/orgs/abcd1234-5678-90ef-ghij"] }
  [Cassette: 'snyk_v2_task_run'] Checking if [get https://api.eu.snyk.io/rest/orgs/abcd1234-5678-90ef-ghij-klmnopqrstuv/projects?limit=100&version=2024-04-29] matches [get https://api.eu.snyk.io/rest/orgs/abcd1234-5678-90ef-ghij-klmnopqrstuv/projects?limit=100&version=2024-04-29] using [:method, :uri]
    [Cassette: 'snyk_v2_task_run'] method (matched): current request [get https://api.eu.snyk.io/rest/orgs/abcd1234-5678-90ef-ghij-klmnopqrstuv/projects?limit=100&version=2024-04-29] vs [get https://api.eu.snyk.io/rest/orgs/abcd1234-5678-90ef-ghij-klmnopqrstuv/projects?limit=100&version=2024-04-29]
    [Cassette: 'snyk_v2_task_run'] uri (matched): current request [get https://api.eu.snyk.io/rest/orgs/abcd1234-5678-90ef-ghij-klmnopqrstuv/projects?limit=100&version=2024-04-29] vs [get https://api.eu.snyk.io/rest/orgs/abcd1234-5678-90ef-ghij-klmnopqrstuv/projects?limit=100&version=2024-04-29]
  [Cassette: 'snyk_v2_task_run'] Found matching interaction for [get https://api.eu.snyk.io/rest/orgs/abcd1234-5678-90ef-ghij-klmnopqrstuv/projects?limit=100&version=2024-04-29] at index 0: [200 "{\"jsonapi\":{\"version\":\"1.0\"},\"data\":[{\"type\":\"project\",\"id\":\"abcd5678-1234-efgh-"]
[webmock] Identified request type (stubbed_by_vcr) for [get https://api.eu.snyk.io/rest/orgs/abcd1234-5678-90ef-ghij-klmnopqrstuv/projects?limit=100&version=2024-04-29]
[webmock] Handling request: [get https://api.eu.snyk.io/rest/orgs/abcd1234-5678-90ef-ghij-klmnopqrstuv/issues?created_after=2024-09-08T00:00:00Z&created_before=2024-10-08T00:00:00Z&limit=10&version=2024-04-29] (disabled: false)
[webmock] Identified request type (externally_stubbed) for [get https://api.eu.snyk.io/rest/orgs/abcd1234-5678-90ef-ghij-klmnopqrstuv/issues?created_after=2024-09-08T00:00:00Z&created_before=2024-10-08T00:00:00Z&limit=10&version=2024-04-29]
[Cassette: 'snyk_v2_task_run'] Initialized with options: {:record=>:once, :record_on_error=>true, :match_requests_on=>[:method, :uri], :allow_unused_http_interactions=>true, :serialize_with=>:yaml, :persist_with=>:file_system, :persister_options=>{}}
[webmock] Handling request: [get http://169.254.169.254/latest/metadata/] (disabled: false)
[webmock] Identified request type (externally_stubbed) for [get http://169.254.169.254/latest/metadata/]
[webmock] Handling request: [get http://169.254.169.254/latest/metadata/] (disabled: false)
[webmock] Identified request type (externally_stubbed) for [get http://169.254.169.254/latest/metadata/]
[webmock] Handling request: [get https://api.eu.snyk.io/rest/orgs?version=2024-04-29] (disabled: false)
[webmock] Identified request type (externally_stubbed) for [get https://api.eu.snyk.io/rest/orgs?version=2024-04-29]
[webmock] Handling request: [get https://api.eu.snyk.io/rest/orgs/abcd1234-5678-90ef-ghij-klmnopqrstuv/projects?limit=100&version=2024-04-29] (disabled: false)
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_ACCESS_KEY_ID>"
[VCR::Configuration] before_playback: replacing nil with "<AWS_SECRET_ACCESS_KEY>"
[VCR::Configuration] before_playback: replacing nil with "<GITHUB_TOKEN>"
[VCR::Configuration] before_playback: replacing nil with "<SNYK_API_TOKEN>"
  [Cassette: 'snyk_v2_task_run'] Initialized HTTPInteractionList with request matchers [:method, :uri] and 2 interaction(s): { [get https://api.eu.snyk.io/rest/orgs/abcd1234-5678-90ef-ghij-klmnopqrstuv/projects?limit=100&version=2024-04-29] => [200 "{\"jsonapi\":{\"version\":\"1.0\"},\"data\":[{\"type\":\"project\",\"id\":\"abcd5678-1234-efgh-"], [get https://api.eu.snyk.io/rest/orgs/abcd1234-5678-90ef-ghij-klmnopqrstuv/issues?created_after=2024-07-14T00:00:00Z&created_before=2024-08-13T00:00:00Z&limit=10&version=2024-04-29] => [200 "{\"jsonapi\":{\"version\":\"1.0\"},\"links\":{\"self\":\"/rest/orgs/abcd1234-5678-90ef-ghij"] }
  [Cassette: 'snyk_v2_task_run'] Checking if [get https://api.eu.snyk.io/rest/orgs/abcd1234-5678-90ef-ghij-klmnopqrstuv/projects?limit=100&version=2024-04-29] matches [get https://api.eu.snyk.io/rest/orgs/abcd1234-5678-90ef-ghij-klmnopqrstuv/projects?limit=100&version=2024-04-29] using [:method, :uri]
    [Cassette: 'snyk_v2_task_run'] method (matched): current request [get https://api.eu.snyk.io/rest/orgs/abcd1234-5678-90ef-ghij-klmnopqrstuv/projects?limit=100&version=2024-04-29] vs [get https://api.eu.snyk.io/rest/orgs/abcd1234-5678-90ef-ghij-klmnopqrstuv/projects?limit=100&version=2024-04-29]
    [Cassette: 'snyk_v2_task_run'] uri (matched): current request [get https://api.eu.snyk.io/rest/orgs/abcd1234-5678-90ef-ghij-klmnopqrstuv/projects?limit=100&version=2024-04-29] vs [get https://api.eu.snyk.io/rest/orgs/abcd1234-5678-90ef-ghij-klmnopqrstuv/projects?limit=100&version=2024-04-29]
  [Cassette: 'snyk_v2_task_run'] Found matching interaction for [get https://api.eu.snyk.io/rest/orgs/abcd1234-5678-90ef-ghij-klmnopqrstuv/projects?limit=100&version=2024-04-29] at index 0: [200 "{\"jsonapi\":{\"version\":\"1.0\"},\"data\":[{\"type\":\"project\",\"id\":\"abcd5678-1234-efgh-"]
[webmock] Identified request type (stubbed_by_vcr) for [get https://api.eu.snyk.io/rest/orgs/abcd1234-5678-90ef-ghij-klmnopqrstuv/projects?limit=100&version=2024-04-29]
[webmock] Handling request: [get https://api.eu.snyk.io/rest/orgs/abcd1234-5678-90ef-ghij-klmnopqrstuv/issues?created_after=2024-09-08T00:00:00Z&created_before=2024-10-08T00:00:00Z&limit=10&version=2024-04-29] (disabled: false)
[webmock] Identified request type (externally_stubbed) for [get https://api.eu.snyk.io/rest/orgs/abcd1234-5678-90ef-ghij-klmnopqrstuv/issues?created_after=2024-09-08T00:00:00Z&created_before=2024-10-08T00:00:00Z&limit=10&version=2024-04-29]
[webmock] Handling request: [get http://169.254.169.254/latest/metadata/] (disabled: false)
[webmock] Identified request type (externally_stubbed) for [get http://169.254.169.254/latest/metadata/]
[webmock] Handling request: [get http://169.254.169.254/latest/metadata/] (disabled: false)
[webmock] Identified request type (externally_stubbed) for [get http://169.254.169.254/latest/metadata/]
[webmock] Handling request: [get https://api.veracode.com/appsec/v1/categories?size=100] (disabled: false)
[webmock] Identified request type (externally_stubbed) for [get https://api.veracode.com/appsec/v1/categories?size=100]
[webmock] Handling request: [get https://api.veracode.com/appsec/v1/applications?size=100] (disabled: false)
[webmock] Identified request type (externally_stubbed) for [get https://api.veracode.com/appsec/v1/applications?size=100]
[webmock] Handling request: [get https://api.veracode.com/appsec/v2/applications/TESTGUID/findings?size=100] (disabled: false)
[webmock] Identified request type (externally_stubbed) for [get https://api.veracode.com/appsec/v2/applications/TESTGUID/findings?size=100]
[webmock] Handling request: [get https://api.veracode.com/appsec/v2/applications/TESTGUID/findings?scan_type=SCA&size=100] (disabled: false)
[webmock] Identified request type (externally_stubbed) for [get https://api.veracode.com/appsec/v2/applications/TESTGUID/findings?scan_type=SCA&size=100]
[webmock] Handling request: [get http://169.254.169.254/latest/metadata/] (disabled: false)
[webmock] Identified request type (externally_stubbed) for [get http://169.254.169.254/latest/metadata/]
[webmock] Handling request: [get http://169.254.169.254/latest/metadata/] (disabled: false)
[webmock] Identified request type (externally_stubbed) for [get http://169.254.169.254/latest/metadata/]
[webmock] Handling request: [get http://169.254.169.254/latest/metadata/] (disabled: false)
[webmock] Identified request type (externally_stubbed) for [get http://169.254.169.254/latest/metadata/]
[webmock] Handling request: [get http://169.254.169.254/latest/metadata/] (disabled: false)
[webmock] Identified request type (externally_stubbed) for [get http://169.254.169.254/latest/metadata/]
[webmock] Handling request: [get http://169.254.169.254/latest/metadata/] (disabled: false)
[webmock] Identified request type (externally_stubbed) for [get http://169.254.169.254/latest/metadata/]
[webmock] Handling request: [get http://169.254.169.254/latest/metadata/] (disabled: false)
[webmock] Identified request type (externally_stubbed) for [get http://169.254.169.254/latest/metadata/]
[webmock] Handling request: [post http://api.example.com/] (disabled: false)
[webmock] Identified request type (externally_stubbed) for [post http://api.example.com/]
[webmock] Handling request: [post http://api.example.com/] (disabled: false)
[webmock] Identified request type (externally_stubbed) for [post http://api.example.com/]
[webmock] Handling request: [get http://169.254.169.254/latest/metadata/] (disabled: false)
[webmock] Identified request type (externally_stubbed) for [get http://169.254.169.254/latest/metadata/]
[webmock] Handling request: [get http://169.254.169.254/latest/metadata/] (disabled: false)
[webmock] Identified request type (externally_stubbed) for [get http://169.254.169.254/latest/metadata/]
[webmock] Handling request: [get http://169.254.169.254/latest/metadata/] (disabled: false)
[webmock] Identified request type (externally_stubbed) for [get http://169.254.169.254/latest/metadata/]
[webmock] Handling request: [get http://169.254.169.254/latest/metadata/] (disabled: false)
[webmock] Identified request type (externally_stubbed) for [get http://169.254.169.254/latest/metadata/]
[webmock] Handling request: [get http://169.254.169.254/latest/metadata/] (disabled: false)
[webmock] Identified request type (externally_stubbed) for [get http://169.254.169.254/latest/metadata/]
[webmock] Handling request: [get http://169.254.169.254/latest/metadata/] (disabled: false)
[webmock] Identified request type (externally_stubbed) for [get http://169.254.169.254/latest/metadata/]
[webmock] Handling request: [get http://169.254.169.254/latest/metadata/] (disabled: false)
[webmock] Identified request type (externally_stubbed) for [get http://169.254.169.254/latest/metadata/]
[webmock] Handling request: [get http://169.254.169.254/latest/metadata/] (disabled: false)
[webmock] Identified request type (externally_stubbed) for [get http://169.254.169.254/latest/metadata/]
[webmock] Handling request: [get http://169.254.169.254/latest/metadata/] (disabled: false)
[webmock] Identified request type (externally_stubbed) for [get http://169.254.169.254/latest/metadata/]
[webmock] Handling request: [get http://169.254.169.254/latest/metadata/] (disabled: false)
[webmock] Identified request type (externally_stubbed) for [get http://169.254.169.254/latest/metadata/]
[webmock] Handling request: [get http://169.254.169.254/latest/metadata/] (disabled: false)
[webmock] Identified request type (externally_stubbed) for [get http://169.254.169.254/latest/metadata/]
[webmock] Handling request: [get http://169.254.169.254/latest/metadata/] (disabled: false)
[webmock] Identified request type (externally_stubbed) for [get http://169.254.169.254/latest/metadata/]
[webmock] Handling request: [get http://169.254.169.254/latest/metadata/] (disabled: false)
[webmock] Identified request type (externally_stubbed) for [get http://169.254.169.254/latest/metadata/]
[webmock] Handling request: [get http://169.254.169.254/latest/metadata/] (disabled: false)
[webmock] Identified request type (externally_stubbed) for [get http://169.254.169.254/latest/metadata/]
[webmock] Handling request: [get http://169.254.169.254/latest/metadata/] (disabled: false)
[webmock] Identified request type (externally_stubbed) for [get http://169.254.169.254/latest/metadata/]
[webmock] Handling request: [get http://169.254.169.254/latest/metadata/] (disabled: false)
[webmock] Identified request type (externally_stubbed) for [get http://169.254.169.254/latest/metadata/]
[webmock] Handling request: [get http://169.254.169.254/latest/metadata/] (disabled: false)
[webmock] Identified request type (externally_stubbed) for [get http://169.254.169.254/latest/metadata/]
[webmock] Handling request: [get http://169.254.169.254/latest/metadata/] (disabled: false)
[webmock] Identified request type (externally_stubbed) for [get http://169.254.169.254/latest/metadata/]
[webmock] Handling request: [get http://169.254.169.254/latest/metadata/] (disabled: false)
[webmock] Identified request type (externally_stubbed) for [get http://169.254.169.254/latest/metadata/]
[webmock] Handling request: [get http://169.254.169.254/latest/metadata/] (disabled: false)
[webmock] Identified request type (externally_stubbed) for [get http://169.254.169.254/latest/metadata/]
[webmock] Handling request: [get http://169.254.169.254/latest/metadata/] (disabled: false)
[webmock] Identified request type (externally_stubbed) for [get http://169.254.169.254/latest/metadata/]
[webmock] Handling request: [get http://169.254.169.254/latest/metadata/] (disabled: false)
[webmock] Identified request type (externally_stubbed) for [get http://169.254.169.254/latest/metadata/]
[webmock] Handling request: [get http://169.254.169.254/latest/metadata/] (disabled: false)
[webmock] Identified request type (externally_stubbed) for [get http://169.254.169.254/latest/metadata/]
[webmock] Handling request: [get http://169.254.169.254/latest/metadata/] (disabled: false)
[webmock] Identified request type (externally_stubbed) for [get http://169.254.169.254/latest/metadata/]
[webmock] Handling request: [get http://169.254.169.254/latest/metadata/] (disabled: false)
[webmock] Identified request type (externally_stubbed) for [get http://169.254.169.254/latest/metadata/]
[webmock] Handling request: [get http://169.254.169.254/latest/metadata/] (disabled: false)
[webmock] Identified request type (externally_stubbed) for [get http://169.254.169.254/latest/metadata/]
[webmock] Handling request: [get http://169.254.169.254/latest/metadata/] (disabled: false)
[webmock] Identified request type (externally_stubbed) for [get http://169.254.169.254/latest/metadata/]
